Terminals unused in grammar

    ARROW
    RESERVED


Grammar

    0 $accept: Program $end

    1 Program: CLASS ID LBRACE ProgramAux RBRACE

    2 ProgramAux: %empty
    3           | MethodDecl ProgramAux
    4           | FieldDecl ProgramAux
    5           | SEMICOLON ProgramAux

    6 MethodDecl: PUBLIC STATIC MethodHeader MethodBody

    7 FieldDecl: PUBLIC STATIC Type ID FieldDeclAux SEMICOLON
    8          | error SEMICOLON

    9 FieldDeclAux: COMMA ID FieldDeclAux
   10             | %empty

   11 Type: INT
   12     | DOUBLE
   13     | BOOL

   14 MethodHeader: Type ID LPAR FormalParams RPAR
   15             | VOID ID LPAR FormalParams RPAR

   16 FormalParams: Type ID FormalParamsAux
   17             | STRING LSQ RSQ ID
   18             | %empty

   19 FormalParamsAux: COMMA Type ID FormalParamsAux
   20                | %empty

   21 MethodBody: LBRACE MethodBodyAux RBRACE

   22 MethodBodyAux: Statement MethodBodyAux
   23              | VarDecl MethodBodyAux
   24              | %empty

   25 VarDecl: Type ID VarDeclAux SEMICOLON

   26 VarDeclAux: COMMA ID VarDeclAux
   27           | %empty

   28 Statement: LBRACE Statement StatementAux RBRACE
   29          | LBRACE RBRACE
   30          | IF LPAR Expr RPAR Statement
   31          | IF LPAR Expr RPAR Statement ELSE Statement
   32          | WHILE LPAR Expr RPAR Statement
   33          | RETURN Expr SEMICOLON
   34          | RETURN SEMICOLON
   35          | MethodInvocation SEMICOLON
   36          | ID ASSIGN Expr SEMICOLON
   37          | ParseArgs SEMICOLON
   38          | SEMICOLON
   39          | PRINT LPAR Expr RPAR SEMICOLON
   40          | PRINT LPAR STRLIT RPAR SEMICOLON
   41          | error SEMICOLON

   42 StatementAux: Statement StatementAux
   43             | %empty

   44 MethodInvocation: ID LPAR RPAR
   45                 | ID LPAR MethodInvocationAux RPAR
   46                 | ID LPAR error RPAR

   47 MethodInvocationAux: Expr MethodInvocationAux_2

   48 MethodInvocationAux_2: %empty
   49                      | COMMA Expr MethodInvocationAux_2

   50 ParseArgs: PARSEINT LPAR ID LSQ Expr RSQ RPAR
   51          | PARSEINT LPAR error RPAR

   52 Expr: ExprAux
   53     | ID ASSIGN Expr

   54 ExprAux: ExprAux PLUS ExprAux
   55        | ExprAux MINUS ExprAux
   56        | ExprAux STAR ExprAux
   57        | ExprAux DIV ExprAux
   58        | ExprAux MOD ExprAux
   59        | ExprAux OR ExprAux
   60        | ExprAux XOR ExprAux
   61        | ExprAux AND ExprAux
   62        | ExprAux LSHIFT ExprAux
   63        | ExprAux RSHIFT ExprAux
   64        | ExprAux EQ ExprAux
   65        | ExprAux NE ExprAux
   66        | ExprAux LT ExprAux
   67        | ExprAux GT ExprAux
   68        | ExprAux LE ExprAux
   69        | ExprAux GE ExprAux
   70        | MINUS ExprAux
   71        | NOT ExprAux
   72        | PLUS ExprAux
   73        | LPAR Expr RPAR
   74        | ID
   75        | ID DOTLENGTH
   76        | INTLIT
   77        | REALLIT
   78        | BOOLLIT
   79        | MethodInvocation
   80        | ParseArgs
   81        | LPAR error RPAR


Terminals, with rules where they appear

    $end (0) 0
    error (256) 8 41 46 51 81
    CLASS (258) 1
    PUBLIC (259) 6 7
    STATIC (260) 6 7
    COMMA (261) 9 19 26 49
    LBRACE (262) 1 21 28 29
    RBRACE (263) 1 21 28 29
    LPAR (264) 14 15 30 31 32 39 40 44 45 46 50 51 73 81
    RPAR (265) 14 15 30 31 32 39 40 44 45 46 50 51 73 81
    LSQ (266) 17 50
    RSQ (267) 17 50
    ELSE (268) 31
    ARROW (269)
    RESERVED (270)
    WHILE <info> (271) 32
    SEMICOLON <info> (272) 5 7 8 25 33 34 35 36 37 38 39 40 41
    STRING <info> (273) 17
    VOID <info> (274) 15
    IF <info> (275) 30 31
    ID <info> (276) 1 7 9 14 15 16 17 19 25 26 36 44 45 46 50 53 74 75
    STRLIT <info> (277) 40
    INTLIT <info> (278) 76
    REALLIT <info> (279) 77
    BOOLLIT <info> (280) 78
    BOOL <info> (281) 13
    INT <info> (282) 11
    DOUBLE <info> (283) 12
    PLUS <info> (284) 54 72
    MINUS <info> (285) 55 70
    STAR <info> (286) 56
    DIV <info> (287) 57
    MOD <info> (288) 58
    AND <info> (289) 61
    OR <info> (290) 59
    XOR <info> (291) 60
    LSHIFT <info> (292) 62
    RSHIFT <info> (293) 63
    EQ <info> (294) 64
    GE <info> (295) 69
    GT <info> (296) 67
    LE <info> (297) 68
    LT <info> (298) 66
    NE <info> (299) 65
    NOT <info> (300) 71
    ASSIGN <info> (301) 36 53
    PRINT <info> (302) 39 40
    RETURN <info> (303) 33 34
    PARSEINT <info> (304) 50 51
    DOTLENGTH <info> (305) 75


Nonterminals, with rules where they appear

    $accept (51)
        on left: 0
    Program <ast> (52)
        on left: 1
        on right: 0
    ProgramAux <ast> (53)
        on left: 2 3 4 5
        on right: 1 3 4 5
    MethodDecl <ast> (54)
        on left: 6
        on right: 3
    FieldDecl <ast> (55)
        on left: 7 8
        on right: 4
    FieldDeclAux <ast> (56)
        on left: 9 10
        on right: 7 9
    Type <ast> (57)
        on left: 11 12 13
        on right: 7 14 16 19 25
    MethodHeader <ast> (58)
        on left: 14 15
        on right: 6
    FormalParams <ast> (59)
        on left: 16 17 18
        on right: 14 15
    FormalParamsAux <ast> (60)
        on left: 19 20
        on right: 16 19
    MethodBody <ast> (61)
        on left: 21
        on right: 6
    MethodBodyAux <ast> (62)
        on left: 22 23 24
        on right: 21 22 23
    VarDecl <ast> (63)
        on left: 25
        on right: 23
    VarDeclAux <ast> (64)
        on left: 26 27
        on right: 25 26
    Statement <ast> (65)
        on left: 28 29 30 31 32 33 34 35 36 37 38 39 40 41
        on right: 22 28 30 31 32 42
    StatementAux <ast> (66)
        on left: 42 43
        on right: 28 42
    MethodInvocation <ast> (67)
        on left: 44 45 46
        on right: 35 79
    MethodInvocationAux <ast> (68)
        on left: 47
        on right: 45
    MethodInvocationAux_2 <ast> (69)
        on left: 48 49
        on right: 47 49
    ParseArgs <ast> (70)
        on left: 50 51
        on right: 37 80
    Expr <ast> (71)
        on left: 52 53
        on right: 30 31 32 33 36 39 47 49 50 53 73
    ExprAux <ast> (72)
        on left: 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81
        on right: 52 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72


State 0

    0 $accept: . Program $end

    CLASS  shift, and go to state 1

    Program  go to state 2


State 1

    1 Program: CLASS . ID LBRACE ProgramAux RBRACE

    ID  shift, and go to state 3


State 2

    0 $accept: Program . $end

    $end  shift, and go to state 4


State 3

    1 Program: CLASS ID . LBRACE ProgramAux RBRACE

    LBRACE  shift, and go to state 5


State 4

    0 $accept: Program $end .

    $default  accept


State 5

    1 Program: CLASS ID LBRACE . ProgramAux RBRACE

    error      shift, and go to state 6
    PUBLIC     shift, and go to state 7
    SEMICOLON  shift, and go to state 8

    RBRACE  reduce using rule 2 (ProgramAux)

    ProgramAux  go to state 9
    MethodDecl  go to state 10
    FieldDecl   go to state 11


State 6

    8 FieldDecl: error . SEMICOLON

    SEMICOLON  shift, and go to state 12


State 7

    6 MethodDecl: PUBLIC . STATIC MethodHeader MethodBody
    7 FieldDecl: PUBLIC . STATIC Type ID FieldDeclAux SEMICOLON

    STATIC  shift, and go to state 13


State 8

    5 ProgramAux: SEMICOLON . ProgramAux

    error      shift, and go to state 6
    PUBLIC     shift, and go to state 7
    SEMICOLON  shift, and go to state 8

    RBRACE  reduce using rule 2 (ProgramAux)

    ProgramAux  go to state 14
    MethodDecl  go to state 10
    FieldDecl   go to state 11


State 9

    1 Program: CLASS ID LBRACE ProgramAux . RBRACE

    RBRACE  shift, and go to state 15


State 10

    3 ProgramAux: MethodDecl . ProgramAux

    error      shift, and go to state 6
    PUBLIC     shift, and go to state 7
    SEMICOLON  shift, and go to state 8

    RBRACE  reduce using rule 2 (ProgramAux)

    ProgramAux  go to state 16
    MethodDecl  go to state 10
    FieldDecl   go to state 11


State 11

    4 ProgramAux: FieldDecl . ProgramAux

    error      shift, and go to state 6
    PUBLIC     shift, and go to state 7
    SEMICOLON  shift, and go to state 8

    RBRACE  reduce using rule 2 (ProgramAux)

    ProgramAux  go to state 17
    MethodDecl  go to state 10
    FieldDecl   go to state 11


State 12

    8 FieldDecl: error SEMICOLON .

    $default  reduce using rule 8 (FieldDecl)


State 13

    6 MethodDecl: PUBLIC STATIC . MethodHeader MethodBody
    7 FieldDecl: PUBLIC STATIC . Type ID FieldDeclAux SEMICOLON

    VOID    shift, and go to state 18
    BOOL    shift, and go to state 19
    INT     shift, and go to state 20
    DOUBLE  shift, and go to state 21

    Type          go to state 22
    MethodHeader  go to state 23


State 14

    5 ProgramAux: SEMICOLON ProgramAux .

    $default  reduce using rule 5 (ProgramAux)


State 15

    1 Program: CLASS ID LBRACE ProgramAux RBRACE .

    $default  reduce using rule 1 (Program)


State 16

    3 ProgramAux: MethodDecl ProgramAux .

    $default  reduce using rule 3 (ProgramAux)


State 17

    4 ProgramAux: FieldDecl ProgramAux .

    $default  reduce using rule 4 (ProgramAux)


State 18

   15 MethodHeader: VOID . ID LPAR FormalParams RPAR

    ID  shift, and go to state 24


State 19

   13 Type: BOOL .

    $default  reduce using rule 13 (Type)


State 20

   11 Type: INT .

    $default  reduce using rule 11 (Type)


State 21

   12 Type: DOUBLE .

    $default  reduce using rule 12 (Type)


State 22

    7 FieldDecl: PUBLIC STATIC Type . ID FieldDeclAux SEMICOLON
   14 MethodHeader: Type . ID LPAR FormalParams RPAR

    ID  shift, and go to state 25


State 23

    6 MethodDecl: PUBLIC STATIC MethodHeader . MethodBody

    LBRACE  shift, and go to state 26

    MethodBody  go to state 27


State 24

   15 MethodHeader: VOID ID . LPAR FormalParams RPAR

    LPAR  shift, and go to state 28


State 25

    7 FieldDecl: PUBLIC STATIC Type ID . FieldDeclAux SEMICOLON
   14 MethodHeader: Type ID . LPAR FormalParams RPAR

    COMMA  shift, and go to state 29
    LPAR   shift, and go to state 30

    $default  reduce using rule 10 (FieldDeclAux)

    FieldDeclAux  go to state 31


State 26

   21 MethodBody: LBRACE . MethodBodyAux RBRACE

    error      shift, and go to state 32
    LBRACE     shift, and go to state 33
    WHILE      shift, and go to state 34
    SEMICOLON  shift, and go to state 35
    IF         shift, and go to state 36
    ID         shift, and go to state 37
    BOOL       shift, and go to state 19
    INT        shift, and go to state 20
    DOUBLE     shift, and go to state 21
    PRINT      shift, and go to state 38
    RETURN     shift, and go to state 39
    PARSEINT   shift, and go to state 40

    RBRACE  reduce using rule 24 (MethodBodyAux)

    Type              go to state 41
    MethodBodyAux     go to state 42
    VarDecl           go to state 43
    Statement         go to state 44
    MethodInvocation  go to state 45
    ParseArgs         go to state 46


State 27

    6 MethodDecl: PUBLIC STATIC MethodHeader MethodBody .

    $default  reduce using rule 6 (MethodDecl)


State 28

   15 MethodHeader: VOID ID LPAR . FormalParams RPAR

    STRING  shift, and go to state 47
    BOOL    shift, and go to state 19
    INT     shift, and go to state 20
    DOUBLE  shift, and go to state 21

    $default  reduce using rule 18 (FormalParams)

    Type          go to state 48
    FormalParams  go to state 49


State 29

    9 FieldDeclAux: COMMA . ID FieldDeclAux

    ID  shift, and go to state 50


State 30

   14 MethodHeader: Type ID LPAR . FormalParams RPAR

    STRING  shift, and go to state 47
    BOOL    shift, and go to state 19
    INT     shift, and go to state 20
    DOUBLE  shift, and go to state 21

    $default  reduce using rule 18 (FormalParams)

    Type          go to state 48
    FormalParams  go to state 51


State 31

    7 FieldDecl: PUBLIC STATIC Type ID FieldDeclAux . SEMICOLON

    SEMICOLON  shift, and go to state 52


State 32

   41 Statement: error . SEMICOLON

    SEMICOLON  shift, and go to state 53


State 33

   28 Statement: LBRACE . Statement StatementAux RBRACE
   29          | LBRACE . RBRACE

    error      shift, and go to state 32
    LBRACE     shift, and go to state 33
    RBRACE     shift, and go to state 54
    WHILE      shift, and go to state 34
    SEMICOLON  shift, and go to state 35
    IF         shift, and go to state 36
    ID         shift, and go to state 37
    PRINT      shift, and go to state 38
    RETURN     shift, and go to state 39
    PARSEINT   shift, and go to state 40

    Statement         go to state 55
    MethodInvocation  go to state 45
    ParseArgs         go to state 46


State 34

   32 Statement: WHILE . LPAR Expr RPAR Statement

    LPAR  shift, and go to state 56


State 35

   38 Statement: SEMICOLON .

    $default  reduce using rule 38 (Statement)


State 36

   30 Statement: IF . LPAR Expr RPAR Statement
   31          | IF . LPAR Expr RPAR Statement ELSE Statement

    LPAR  shift, and go to state 57


State 37

   36 Statement: ID . ASSIGN Expr SEMICOLON
   44 MethodInvocation: ID . LPAR RPAR
   45                 | ID . LPAR MethodInvocationAux RPAR
   46                 | ID . LPAR error RPAR

    LPAR    shift, and go to state 58
    ASSIGN  shift, and go to state 59


State 38

   39 Statement: PRINT . LPAR Expr RPAR SEMICOLON
   40          | PRINT . LPAR STRLIT RPAR SEMICOLON

    LPAR  shift, and go to state 60


State 39

   33 Statement: RETURN . Expr SEMICOLON
   34          | RETURN . SEMICOLON

    LPAR       shift, and go to state 61
    SEMICOLON  shift, and go to state 62
    ID         shift, and go to state 63
    INTLIT     shift, and go to state 64
    REALLIT    shift, and go to state 65
    BOOLLIT    shift, and go to state 66
    PLUS       shift, and go to state 67
    MINUS      shift, and go to state 68
    NOT        shift, and go to state 69
    PARSEINT   shift, and go to state 40

    MethodInvocation  go to state 70
    ParseArgs         go to state 71
    Expr              go to state 72
    ExprAux           go to state 73


State 40

   50 ParseArgs: PARSEINT . LPAR ID LSQ Expr RSQ RPAR
   51          | PARSEINT . LPAR error RPAR

    LPAR  shift, and go to state 74


State 41

   25 VarDecl: Type . ID VarDeclAux SEMICOLON

    ID  shift, and go to state 75


State 42

   21 MethodBody: LBRACE MethodBodyAux . RBRACE

    RBRACE  shift, and go to state 76


State 43

   23 MethodBodyAux: VarDecl . MethodBodyAux

    error      shift, and go to state 32
    LBRACE     shift, and go to state 33
    WHILE      shift, and go to state 34
    SEMICOLON  shift, and go to state 35
    IF         shift, and go to state 36
    ID         shift, and go to state 37
    BOOL       shift, and go to state 19
    INT        shift, and go to state 20
    DOUBLE     shift, and go to state 21
    PRINT      shift, and go to state 38
    RETURN     shift, and go to state 39
    PARSEINT   shift, and go to state 40

    RBRACE  reduce using rule 24 (MethodBodyAux)

    Type              go to state 41
    MethodBodyAux     go to state 77
    VarDecl           go to state 43
    Statement         go to state 44
    MethodInvocation  go to state 45
    ParseArgs         go to state 46


State 44

   22 MethodBodyAux: Statement . MethodBodyAux

    error      shift, and go to state 32
    LBRACE     shift, and go to state 33
    WHILE      shift, and go to state 34
    SEMICOLON  shift, and go to state 35
    IF         shift, and go to state 36
    ID         shift, and go to state 37
    BOOL       shift, and go to state 19
    INT        shift, and go to state 20
    DOUBLE     shift, and go to state 21
    PRINT      shift, and go to state 38
    RETURN     shift, and go to state 39
    PARSEINT   shift, and go to state 40

    RBRACE  reduce using rule 24 (MethodBodyAux)

    Type              go to state 41
    MethodBodyAux     go to state 78
    VarDecl           go to state 43
    Statement         go to state 44
    MethodInvocation  go to state 45
    ParseArgs         go to state 46


State 45

   35 Statement: MethodInvocation . SEMICOLON

    SEMICOLON  shift, and go to state 79


State 46

   37 Statement: ParseArgs . SEMICOLON

    SEMICOLON  shift, and go to state 80


State 47

   17 FormalParams: STRING . LSQ RSQ ID

    LSQ  shift, and go to state 81


State 48

   16 FormalParams: Type . ID FormalParamsAux

    ID  shift, and go to state 82


State 49

   15 MethodHeader: VOID ID LPAR FormalParams . RPAR

    RPAR  shift, and go to state 83


State 50

    9 FieldDeclAux: COMMA ID . FieldDeclAux

    COMMA  shift, and go to state 29

    $default  reduce using rule 10 (FieldDeclAux)

    FieldDeclAux  go to state 84


State 51

   14 MethodHeader: Type ID LPAR FormalParams . RPAR

    RPAR  shift, and go to state 85


State 52

    7 FieldDecl: PUBLIC STATIC Type ID FieldDeclAux SEMICOLON .

    $default  reduce using rule 7 (FieldDecl)


State 53

   41 Statement: error SEMICOLON .

    $default  reduce using rule 41 (Statement)


State 54

   29 Statement: LBRACE RBRACE .

    $default  reduce using rule 29 (Statement)


State 55

   28 Statement: LBRACE Statement . StatementAux RBRACE

    error      shift, and go to state 32
    LBRACE     shift, and go to state 33
    WHILE      shift, and go to state 34
    SEMICOLON  shift, and go to state 35
    IF         shift, and go to state 36
    ID         shift, and go to state 37
    PRINT      shift, and go to state 38
    RETURN     shift, and go to state 39
    PARSEINT   shift, and go to state 40

    RBRACE  reduce using rule 43 (StatementAux)

    Statement         go to state 86
    StatementAux      go to state 87
    MethodInvocation  go to state 45
    ParseArgs         go to state 46


State 56

   32 Statement: WHILE LPAR . Expr RPAR Statement

    LPAR      shift, and go to state 61
    ID        shift, and go to state 63
    INTLIT    shift, and go to state 64
    REALLIT   shift, and go to state 65
    BOOLLIT   shift, and go to state 66
    PLUS      shift, and go to state 67
    MINUS     shift, and go to state 68
    NOT       shift, and go to state 69
    PARSEINT  shift, and go to state 40

    MethodInvocation  go to state 70
    ParseArgs         go to state 71
    Expr              go to state 88
    ExprAux           go to state 73


State 57

   30 Statement: IF LPAR . Expr RPAR Statement
   31          | IF LPAR . Expr RPAR Statement ELSE Statement

    LPAR      shift, and go to state 61
    ID        shift, and go to state 63
    INTLIT    shift, and go to state 64
    REALLIT   shift, and go to state 65
    BOOLLIT   shift, and go to state 66
    PLUS      shift, and go to state 67
    MINUS     shift, and go to state 68
    NOT       shift, and go to state 69
    PARSEINT  shift, and go to state 40

    MethodInvocation  go to state 70
    ParseArgs         go to state 71
    Expr              go to state 89
    ExprAux           go to state 73


State 58

   44 MethodInvocation: ID LPAR . RPAR
   45                 | ID LPAR . MethodInvocationAux RPAR
   46                 | ID LPAR . error RPAR

    error     shift, and go to state 90
    LPAR      shift, and go to state 61
    RPAR      shift, and go to state 91
    ID        shift, and go to state 63
    INTLIT    shift, and go to state 64
    REALLIT   shift, and go to state 65
    BOOLLIT   shift, and go to state 66
    PLUS      shift, and go to state 67
    MINUS     shift, and go to state 68
    NOT       shift, and go to state 69
    PARSEINT  shift, and go to state 40

    MethodInvocation     go to state 70
    MethodInvocationAux  go to state 92
    ParseArgs            go to state 71
    Expr                 go to state 93
    ExprAux              go to state 73


State 59

   36 Statement: ID ASSIGN . Expr SEMICOLON

    LPAR      shift, and go to state 61
    ID        shift, and go to state 63
    INTLIT    shift, and go to state 64
    REALLIT   shift, and go to state 65
    BOOLLIT   shift, and go to state 66
    PLUS      shift, and go to state 67
    MINUS     shift, and go to state 68
    NOT       shift, and go to state 69
    PARSEINT  shift, and go to state 40

    MethodInvocation  go to state 70
    ParseArgs         go to state 71
    Expr              go to state 94
    ExprAux           go to state 73


State 60

   39 Statement: PRINT LPAR . Expr RPAR SEMICOLON
   40          | PRINT LPAR . STRLIT RPAR SEMICOLON

    LPAR      shift, and go to state 61
    ID        shift, and go to state 63
    STRLIT    shift, and go to state 95
    INTLIT    shift, and go to state 64
    REALLIT   shift, and go to state 65
    BOOLLIT   shift, and go to state 66
    PLUS      shift, and go to state 67
    MINUS     shift, and go to state 68
    NOT       shift, and go to state 69
    PARSEINT  shift, and go to state 40

    MethodInvocation  go to state 70
    ParseArgs         go to state 71
    Expr              go to state 96
    ExprAux           go to state 73


State 61

   73 ExprAux: LPAR . Expr RPAR
   81        | LPAR . error RPAR

    error     shift, and go to state 97
    LPAR      shift, and go to state 61
    ID        shift, and go to state 63
    INTLIT    shift, and go to state 64
    REALLIT   shift, and go to state 65
    BOOLLIT   shift, and go to state 66
    PLUS      shift, and go to state 67
    MINUS     shift, and go to state 68
    NOT       shift, and go to state 69
    PARSEINT  shift, and go to state 40

    MethodInvocation  go to state 70
    ParseArgs         go to state 71
    Expr              go to state 98
    ExprAux           go to state 73


State 62

   34 Statement: RETURN SEMICOLON .

    $default  reduce using rule 34 (Statement)


State 63

   44 MethodInvocation: ID . LPAR RPAR
   45                 | ID . LPAR MethodInvocationAux RPAR
   46                 | ID . LPAR error RPAR
   53 Expr: ID . ASSIGN Expr
   74 ExprAux: ID .
   75        | ID . DOTLENGTH

    LPAR       shift, and go to state 58
    ASSIGN     shift, and go to state 99
    DOTLENGTH  shift, and go to state 100

    $default  reduce using rule 74 (ExprAux)


State 64

   76 ExprAux: INTLIT .

    $default  reduce using rule 76 (ExprAux)


State 65

   77 ExprAux: REALLIT .

    $default  reduce using rule 77 (ExprAux)


State 66

   78 ExprAux: BOOLLIT .

    $default  reduce using rule 78 (ExprAux)


State 67

   72 ExprAux: PLUS . ExprAux

    LPAR      shift, and go to state 61
    ID        shift, and go to state 101
    INTLIT    shift, and go to state 64
    REALLIT   shift, and go to state 65
    BOOLLIT   shift, and go to state 66
    PLUS      shift, and go to state 67
    MINUS     shift, and go to state 68
    NOT       shift, and go to state 69
    PARSEINT  shift, and go to state 40

    MethodInvocation  go to state 70
    ParseArgs         go to state 71
    ExprAux           go to state 102


State 68

   70 ExprAux: MINUS . ExprAux

    LPAR      shift, and go to state 61
    ID        shift, and go to state 101
    INTLIT    shift, and go to state 64
    REALLIT   shift, and go to state 65
    BOOLLIT   shift, and go to state 66
    PLUS      shift, and go to state 67
    MINUS     shift, and go to state 68
    NOT       shift, and go to state 69
    PARSEINT  shift, and go to state 40

    MethodInvocation  go to state 70
    ParseArgs         go to state 71
    ExprAux           go to state 103


State 69

   71 ExprAux: NOT . ExprAux

    LPAR      shift, and go to state 61
    ID        shift, and go to state 101
    INTLIT    shift, and go to state 64
    REALLIT   shift, and go to state 65
    BOOLLIT   shift, and go to state 66
    PLUS      shift, and go to state 67
    MINUS     shift, and go to state 68
    NOT       shift, and go to state 69
    PARSEINT  shift, and go to state 40

    MethodInvocation  go to state 70
    ParseArgs         go to state 71
    ExprAux           go to state 104


State 70

   79 ExprAux: MethodInvocation .

    $default  reduce using rule 79 (ExprAux)


State 71

   80 ExprAux: ParseArgs .

    $default  reduce using rule 80 (ExprAux)


State 72

   33 Statement: RETURN Expr . SEMICOLON

    SEMICOLON  shift, and go to state 105


State 73

   52 Expr: ExprAux .
   54 ExprAux: ExprAux . PLUS ExprAux
   55        | ExprAux . MINUS ExprAux
   56        | ExprAux . STAR ExprAux
   57        | ExprAux . DIV ExprAux
   58        | ExprAux . MOD ExprAux
   59        | ExprAux . OR ExprAux
   60        | ExprAux . XOR ExprAux
   61        | ExprAux . AND ExprAux
   62        | ExprAux . LSHIFT ExprAux
   63        | ExprAux . RSHIFT ExprAux
   64        | ExprAux . EQ ExprAux
   65        | ExprAux . NE ExprAux
   66        | ExprAux . LT ExprAux
   67        | ExprAux . GT ExprAux
   68        | ExprAux . LE ExprAux
   69        | ExprAux . GE ExprAux

    PLUS    shift, and go to state 106
    MINUS   shift, and go to state 107
    STAR    shift, and go to state 108
    DIV     shift, and go to state 109
    MOD     shift, and go to state 110
    AND     shift, and go to state 111
    OR      shift, and go to state 112
    XOR     shift, and go to state 113
    LSHIFT  shift, and go to state 114
    RSHIFT  shift, and go to state 115
    EQ      shift, and go to state 116
    GE      shift, and go to state 117
    GT      shift, and go to state 118
    LE      shift, and go to state 119
    LT      shift, and go to state 120
    NE      shift, and go to state 121

    $default  reduce using rule 52 (Expr)


State 74

   50 ParseArgs: PARSEINT LPAR . ID LSQ Expr RSQ RPAR
   51          | PARSEINT LPAR . error RPAR

    error  shift, and go to state 122
    ID     shift, and go to state 123


State 75

   25 VarDecl: Type ID . VarDeclAux SEMICOLON

    COMMA  shift, and go to state 124

    $default  reduce using rule 27 (VarDeclAux)

    VarDeclAux  go to state 125


State 76

   21 MethodBody: LBRACE MethodBodyAux RBRACE .

    $default  reduce using rule 21 (MethodBody)


State 77

   23 MethodBodyAux: VarDecl MethodBodyAux .

    $default  reduce using rule 23 (MethodBodyAux)


State 78

   22 MethodBodyAux: Statement MethodBodyAux .

    $default  reduce using rule 22 (MethodBodyAux)


State 79

   35 Statement: MethodInvocation SEMICOLON .

    $default  reduce using rule 35 (Statement)


State 80

   37 Statement: ParseArgs SEMICOLON .

    $default  reduce using rule 37 (Statement)


State 81

   17 FormalParams: STRING LSQ . RSQ ID

    RSQ  shift, and go to state 126


State 82

   16 FormalParams: Type ID . FormalParamsAux

    COMMA  shift, and go to state 127

    $default  reduce using rule 20 (FormalParamsAux)

    FormalParamsAux  go to state 128


State 83

   15 MethodHeader: VOID ID LPAR FormalParams RPAR .

    $default  reduce using rule 15 (MethodHeader)


State 84

    9 FieldDeclAux: COMMA ID FieldDeclAux .

    $default  reduce using rule 9 (FieldDeclAux)


State 85

   14 MethodHeader: Type ID LPAR FormalParams RPAR .

    $default  reduce using rule 14 (MethodHeader)


State 86

   42 StatementAux: Statement . StatementAux

    error      shift, and go to state 32
    LBRACE     shift, and go to state 33
    WHILE      shift, and go to state 34
    SEMICOLON  shift, and go to state 35
    IF         shift, and go to state 36
    ID         shift, and go to state 37
    PRINT      shift, and go to state 38
    RETURN     shift, and go to state 39
    PARSEINT   shift, and go to state 40

    RBRACE  reduce using rule 43 (StatementAux)

    Statement         go to state 86
    StatementAux      go to state 129
    MethodInvocation  go to state 45
    ParseArgs         go to state 46


State 87

   28 Statement: LBRACE Statement StatementAux . RBRACE

    RBRACE  shift, and go to state 130


State 88

   32 Statement: WHILE LPAR Expr . RPAR Statement

    RPAR  shift, and go to state 131


State 89

   30 Statement: IF LPAR Expr . RPAR Statement
   31          | IF LPAR Expr . RPAR Statement ELSE Statement

    RPAR  shift, and go to state 132


State 90

   46 MethodInvocation: ID LPAR error . RPAR

    RPAR  shift, and go to state 133


State 91

   44 MethodInvocation: ID LPAR RPAR .

    $default  reduce using rule 44 (MethodInvocation)


State 92

   45 MethodInvocation: ID LPAR MethodInvocationAux . RPAR

    RPAR  shift, and go to state 134


State 93

   47 MethodInvocationAux: Expr . MethodInvocationAux_2

    COMMA  shift, and go to state 135

    $default  reduce using rule 48 (MethodInvocationAux_2)

    MethodInvocationAux_2  go to state 136


State 94

   36 Statement: ID ASSIGN Expr . SEMICOLON

    SEMICOLON  shift, and go to state 137


State 95

   40 Statement: PRINT LPAR STRLIT . RPAR SEMICOLON

    RPAR  shift, and go to state 138


State 96

   39 Statement: PRINT LPAR Expr . RPAR SEMICOLON

    RPAR  shift, and go to state 139


State 97

   81 ExprAux: LPAR error . RPAR

    RPAR  shift, and go to state 140


State 98

   73 ExprAux: LPAR Expr . RPAR

    RPAR  shift, and go to state 141


State 99

   53 Expr: ID ASSIGN . Expr

    LPAR      shift, and go to state 61
    ID        shift, and go to state 63
    INTLIT    shift, and go to state 64
    REALLIT   shift, and go to state 65
    BOOLLIT   shift, and go to state 66
    PLUS      shift, and go to state 67
    MINUS     shift, and go to state 68
    NOT       shift, and go to state 69
    PARSEINT  shift, and go to state 40

    MethodInvocation  go to state 70
    ParseArgs         go to state 71
    Expr              go to state 142
    ExprAux           go to state 73


State 100

   75 ExprAux: ID DOTLENGTH .

    $default  reduce using rule 75 (ExprAux)


State 101

   44 MethodInvocation: ID . LPAR RPAR
   45                 | ID . LPAR MethodInvocationAux RPAR
   46                 | ID . LPAR error RPAR
   74 ExprAux: ID .
   75        | ID . DOTLENGTH

    LPAR       shift, and go to state 58
    DOTLENGTH  shift, and go to state 100

    $default  reduce using rule 74 (ExprAux)


State 102

   54 ExprAux: ExprAux . PLUS ExprAux
   55        | ExprAux . MINUS ExprAux
   56        | ExprAux . STAR ExprAux
   57        | ExprAux . DIV ExprAux
   58        | ExprAux . MOD ExprAux
   59        | ExprAux . OR ExprAux
   60        | ExprAux . XOR ExprAux
   61        | ExprAux . AND ExprAux
   62        | ExprAux . LSHIFT ExprAux
   63        | ExprAux . RSHIFT ExprAux
   64        | ExprAux . EQ ExprAux
   65        | ExprAux . NE ExprAux
   66        | ExprAux . LT ExprAux
   67        | ExprAux . GT ExprAux
   68        | ExprAux . LE ExprAux
   69        | ExprAux . GE ExprAux
   72        | PLUS ExprAux .

    $default  reduce using rule 72 (ExprAux)


State 103

   54 ExprAux: ExprAux . PLUS ExprAux
   55        | ExprAux . MINUS ExprAux
   56        | ExprAux . STAR ExprAux
   57        | ExprAux . DIV ExprAux
   58        | ExprAux . MOD ExprAux
   59        | ExprAux . OR ExprAux
   60        | ExprAux . XOR ExprAux
   61        | ExprAux . AND ExprAux
   62        | ExprAux . LSHIFT ExprAux
   63        | ExprAux . RSHIFT ExprAux
   64        | ExprAux . EQ ExprAux
   65        | ExprAux . NE ExprAux
   66        | ExprAux . LT ExprAux
   67        | ExprAux . GT ExprAux
   68        | ExprAux . LE ExprAux
   69        | ExprAux . GE ExprAux
   70        | MINUS ExprAux .

    $default  reduce using rule 70 (ExprAux)


State 104

   54 ExprAux: ExprAux . PLUS ExprAux
   55        | ExprAux . MINUS ExprAux
   56        | ExprAux . STAR ExprAux
   57        | ExprAux . DIV ExprAux
   58        | ExprAux . MOD ExprAux
   59        | ExprAux . OR ExprAux
   60        | ExprAux . XOR ExprAux
   61        | ExprAux . AND ExprAux
   62        | ExprAux . LSHIFT ExprAux
   63        | ExprAux . RSHIFT ExprAux
   64        | ExprAux . EQ ExprAux
   65        | ExprAux . NE ExprAux
   66        | ExprAux . LT ExprAux
   67        | ExprAux . GT ExprAux
   68        | ExprAux . LE ExprAux
   69        | ExprAux . GE ExprAux
   71        | NOT ExprAux .

    $default  reduce using rule 71 (ExprAux)


State 105

   33 Statement: RETURN Expr SEMICOLON .

    $default  reduce using rule 33 (Statement)


State 106

   54 ExprAux: ExprAux PLUS . ExprAux

    LPAR      shift, and go to state 61
    ID        shift, and go to state 101
    INTLIT    shift, and go to state 64
    REALLIT   shift, and go to state 65
    BOOLLIT   shift, and go to state 66
    PLUS      shift, and go to state 67
    MINUS     shift, and go to state 68
    NOT       shift, and go to state 69
    PARSEINT  shift, and go to state 40

    MethodInvocation  go to state 70
    ParseArgs         go to state 71
    ExprAux           go to state 143


State 107

   55 ExprAux: ExprAux MINUS . ExprAux

    LPAR      shift, and go to state 61
    ID        shift, and go to state 101
    INTLIT    shift, and go to state 64
    REALLIT   shift, and go to state 65
    BOOLLIT   shift, and go to state 66
    PLUS      shift, and go to state 67
    MINUS     shift, and go to state 68
    NOT       shift, and go to state 69
    PARSEINT  shift, and go to state 40

    MethodInvocation  go to state 70
    ParseArgs         go to state 71
    ExprAux           go to state 144


State 108

   56 ExprAux: ExprAux STAR . ExprAux

    LPAR      shift, and go to state 61
    ID        shift, and go to state 101
    INTLIT    shift, and go to state 64
    REALLIT   shift, and go to state 65
    BOOLLIT   shift, and go to state 66
    PLUS      shift, and go to state 67
    MINUS     shift, and go to state 68
    NOT       shift, and go to state 69
    PARSEINT  shift, and go to state 40

    MethodInvocation  go to state 70
    ParseArgs         go to state 71
    ExprAux           go to state 145


State 109

   57 ExprAux: ExprAux DIV . ExprAux

    LPAR      shift, and go to state 61
    ID        shift, and go to state 101
    INTLIT    shift, and go to state 64
    REALLIT   shift, and go to state 65
    BOOLLIT   shift, and go to state 66
    PLUS      shift, and go to state 67
    MINUS     shift, and go to state 68
    NOT       shift, and go to state 69
    PARSEINT  shift, and go to state 40

    MethodInvocation  go to state 70
    ParseArgs         go to state 71
    ExprAux           go to state 146


State 110

   58 ExprAux: ExprAux MOD . ExprAux

    LPAR      shift, and go to state 61
    ID        shift, and go to state 101
    INTLIT    shift, and go to state 64
    REALLIT   shift, and go to state 65
    BOOLLIT   shift, and go to state 66
    PLUS      shift, and go to state 67
    MINUS     shift, and go to state 68
    NOT       shift, and go to state 69
    PARSEINT  shift, and go to state 40

    MethodInvocation  go to state 70
    ParseArgs         go to state 71
    ExprAux           go to state 147


State 111

   61 ExprAux: ExprAux AND . ExprAux

    LPAR      shift, and go to state 61
    ID        shift, and go to state 101
    INTLIT    shift, and go to state 64
    REALLIT   shift, and go to state 65
    BOOLLIT   shift, and go to state 66
    PLUS      shift, and go to state 67
    MINUS     shift, and go to state 68
    NOT       shift, and go to state 69
    PARSEINT  shift, and go to state 40

    MethodInvocation  go to state 70
    ParseArgs         go to state 71
    ExprAux           go to state 148


State 112

   59 ExprAux: ExprAux OR . ExprAux

    LPAR      shift, and go to state 61
    ID        shift, and go to state 101
    INTLIT    shift, and go to state 64
    REALLIT   shift, and go to state 65
    BOOLLIT   shift, and go to state 66
    PLUS      shift, and go to state 67
    MINUS     shift, and go to state 68
    NOT       shift, and go to state 69
    PARSEINT  shift, and go to state 40

    MethodInvocation  go to state 70
    ParseArgs         go to state 71
    ExprAux           go to state 149


State 113

   60 ExprAux: ExprAux XOR . ExprAux

    LPAR      shift, and go to state 61
    ID        shift, and go to state 101
    INTLIT    shift, and go to state 64
    REALLIT   shift, and go to state 65
    BOOLLIT   shift, and go to state 66
    PLUS      shift, and go to state 67
    MINUS     shift, and go to state 68
    NOT       shift, and go to state 69
    PARSEINT  shift, and go to state 40

    MethodInvocation  go to state 70
    ParseArgs         go to state 71
    ExprAux           go to state 150


State 114

   62 ExprAux: ExprAux LSHIFT . ExprAux

    LPAR      shift, and go to state 61
    ID        shift, and go to state 101
    INTLIT    shift, and go to state 64
    REALLIT   shift, and go to state 65
    BOOLLIT   shift, and go to state 66
    PLUS      shift, and go to state 67
    MINUS     shift, and go to state 68
    NOT       shift, and go to state 69
    PARSEINT  shift, and go to state 40

    MethodInvocation  go to state 70
    ParseArgs         go to state 71
    ExprAux           go to state 151


State 115

   63 ExprAux: ExprAux RSHIFT . ExprAux

    LPAR      shift, and go to state 61
    ID        shift, and go to state 101
    INTLIT    shift, and go to state 64
    REALLIT   shift, and go to state 65
    BOOLLIT   shift, and go to state 66
    PLUS      shift, and go to state 67
    MINUS     shift, and go to state 68
    NOT       shift, and go to state 69
    PARSEINT  shift, and go to state 40

    MethodInvocation  go to state 70
    ParseArgs         go to state 71
    ExprAux           go to state 152


State 116

   64 ExprAux: ExprAux EQ . ExprAux

    LPAR      shift, and go to state 61
    ID        shift, and go to state 101
    INTLIT    shift, and go to state 64
    REALLIT   shift, and go to state 65
    BOOLLIT   shift, and go to state 66
    PLUS      shift, and go to state 67
    MINUS     shift, and go to state 68
    NOT       shift, and go to state 69
    PARSEINT  shift, and go to state 40

    MethodInvocation  go to state 70
    ParseArgs         go to state 71
    ExprAux           go to state 153


State 117

   69 ExprAux: ExprAux GE . ExprAux

    LPAR      shift, and go to state 61
    ID        shift, and go to state 101
    INTLIT    shift, and go to state 64
    REALLIT   shift, and go to state 65
    BOOLLIT   shift, and go to state 66
    PLUS      shift, and go to state 67
    MINUS     shift, and go to state 68
    NOT       shift, and go to state 69
    PARSEINT  shift, and go to state 40

    MethodInvocation  go to state 70
    ParseArgs         go to state 71
    ExprAux           go to state 154


State 118

   67 ExprAux: ExprAux GT . ExprAux

    LPAR      shift, and go to state 61
    ID        shift, and go to state 101
    INTLIT    shift, and go to state 64
    REALLIT   shift, and go to state 65
    BOOLLIT   shift, and go to state 66
    PLUS      shift, and go to state 67
    MINUS     shift, and go to state 68
    NOT       shift, and go to state 69
    PARSEINT  shift, and go to state 40

    MethodInvocation  go to state 70
    ParseArgs         go to state 71
    ExprAux           go to state 155


State 119

   68 ExprAux: ExprAux LE . ExprAux

    LPAR      shift, and go to state 61
    ID        shift, and go to state 101
    INTLIT    shift, and go to state 64
    REALLIT   shift, and go to state 65
    BOOLLIT   shift, and go to state 66
    PLUS      shift, and go to state 67
    MINUS     shift, and go to state 68
    NOT       shift, and go to state 69
    PARSEINT  shift, and go to state 40

    MethodInvocation  go to state 70
    ParseArgs         go to state 71
    ExprAux           go to state 156


State 120

   66 ExprAux: ExprAux LT . ExprAux

    LPAR      shift, and go to state 61
    ID        shift, and go to state 101
    INTLIT    shift, and go to state 64
    REALLIT   shift, and go to state 65
    BOOLLIT   shift, and go to state 66
    PLUS      shift, and go to state 67
    MINUS     shift, and go to state 68
    NOT       shift, and go to state 69
    PARSEINT  shift, and go to state 40

    MethodInvocation  go to state 70
    ParseArgs         go to state 71
    ExprAux           go to state 157


State 121

   65 ExprAux: ExprAux NE . ExprAux

    LPAR      shift, and go to state 61
    ID        shift, and go to state 101
    INTLIT    shift, and go to state 64
    REALLIT   shift, and go to state 65
    BOOLLIT   shift, and go to state 66
    PLUS      shift, and go to state 67
    MINUS     shift, and go to state 68
    NOT       shift, and go to state 69
    PARSEINT  shift, and go to state 40

    MethodInvocation  go to state 70
    ParseArgs         go to state 71
    ExprAux           go to state 158


State 122

   51 ParseArgs: PARSEINT LPAR error . RPAR

    RPAR  shift, and go to state 159


State 123

   50 ParseArgs: PARSEINT LPAR ID . LSQ Expr RSQ RPAR

    LSQ  shift, and go to state 160


State 124

   26 VarDeclAux: COMMA . ID VarDeclAux

    ID  shift, and go to state 161


State 125

   25 VarDecl: Type ID VarDeclAux . SEMICOLON

    SEMICOLON  shift, and go to state 162


State 126

   17 FormalParams: STRING LSQ RSQ . ID

    ID  shift, and go to state 163


State 127

   19 FormalParamsAux: COMMA . Type ID FormalParamsAux

    BOOL    shift, and go to state 19
    INT     shift, and go to state 20
    DOUBLE  shift, and go to state 21

    Type  go to state 164


State 128

   16 FormalParams: Type ID FormalParamsAux .

    $default  reduce using rule 16 (FormalParams)


State 129

   42 StatementAux: Statement StatementAux .

    $default  reduce using rule 42 (StatementAux)


State 130

   28 Statement: LBRACE Statement StatementAux RBRACE .

    $default  reduce using rule 28 (Statement)


State 131

   32 Statement: WHILE LPAR Expr RPAR . Statement

    error      shift, and go to state 32
    LBRACE     shift, and go to state 33
    WHILE      shift, and go to state 34
    SEMICOLON  shift, and go to state 35
    IF         shift, and go to state 36
    ID         shift, and go to state 37
    PRINT      shift, and go to state 38
    RETURN     shift, and go to state 39
    PARSEINT   shift, and go to state 40

    Statement         go to state 165
    MethodInvocation  go to state 45
    ParseArgs         go to state 46


State 132

   30 Statement: IF LPAR Expr RPAR . Statement
   31          | IF LPAR Expr RPAR . Statement ELSE Statement

    error      shift, and go to state 32
    LBRACE     shift, and go to state 33
    WHILE      shift, and go to state 34
    SEMICOLON  shift, and go to state 35
    IF         shift, and go to state 36
    ID         shift, and go to state 37
    PRINT      shift, and go to state 38
    RETURN     shift, and go to state 39
    PARSEINT   shift, and go to state 40

    Statement         go to state 166
    MethodInvocation  go to state 45
    ParseArgs         go to state 46


State 133

   46 MethodInvocation: ID LPAR error RPAR .

    $default  reduce using rule 46 (MethodInvocation)


State 134

   45 MethodInvocation: ID LPAR MethodInvocationAux RPAR .

    $default  reduce using rule 45 (MethodInvocation)


State 135

   49 MethodInvocationAux_2: COMMA . Expr MethodInvocationAux_2

    LPAR      shift, and go to state 61
    ID        shift, and go to state 63
    INTLIT    shift, and go to state 64
    REALLIT   shift, and go to state 65
    BOOLLIT   shift, and go to state 66
    PLUS      shift, and go to state 67
    MINUS     shift, and go to state 68
    NOT       shift, and go to state 69
    PARSEINT  shift, and go to state 40

    MethodInvocation  go to state 70
    ParseArgs         go to state 71
    Expr              go to state 167
    ExprAux           go to state 73


State 136

   47 MethodInvocationAux: Expr MethodInvocationAux_2 .

    $default  reduce using rule 47 (MethodInvocationAux)


State 137

   36 Statement: ID ASSIGN Expr SEMICOLON .

    $default  reduce using rule 36 (Statement)


State 138

   40 Statement: PRINT LPAR STRLIT RPAR . SEMICOLON

    SEMICOLON  shift, and go to state 168


State 139

   39 Statement: PRINT LPAR Expr RPAR . SEMICOLON

    SEMICOLON  shift, and go to state 169


State 140

   81 ExprAux: LPAR error RPAR .

    $default  reduce using rule 81 (ExprAux)


State 141

   73 ExprAux: LPAR Expr RPAR .

    $default  reduce using rule 73 (ExprAux)


State 142

   53 Expr: ID ASSIGN Expr .

    $default  reduce using rule 53 (Expr)


State 143

   54 ExprAux: ExprAux . PLUS ExprAux
   54        | ExprAux PLUS ExprAux .
   55        | ExprAux . MINUS ExprAux
   56        | ExprAux . STAR ExprAux
   57        | ExprAux . DIV ExprAux
   58        | ExprAux . MOD ExprAux
   59        | ExprAux . OR ExprAux
   60        | ExprAux . XOR ExprAux
   61        | ExprAux . AND ExprAux
   62        | ExprAux . LSHIFT ExprAux
   63        | ExprAux . RSHIFT ExprAux
   64        | ExprAux . EQ ExprAux
   65        | ExprAux . NE ExprAux
   66        | ExprAux . LT ExprAux
   67        | ExprAux . GT ExprAux
   68        | ExprAux . LE ExprAux
   69        | ExprAux . GE ExprAux

    STAR  shift, and go to state 108
    DIV   shift, and go to state 109
    MOD   shift, and go to state 110

    $default  reduce using rule 54 (ExprAux)


State 144

   54 ExprAux: ExprAux . PLUS ExprAux
   55        | ExprAux . MINUS ExprAux
   55        | ExprAux MINUS ExprAux .
   56        | ExprAux . STAR ExprAux
   57        | ExprAux . DIV ExprAux
   58        | ExprAux . MOD ExprAux
   59        | ExprAux . OR ExprAux
   60        | ExprAux . XOR ExprAux
   61        | ExprAux . AND ExprAux
   62        | ExprAux . LSHIFT ExprAux
   63        | ExprAux . RSHIFT ExprAux
   64        | ExprAux . EQ ExprAux
   65        | ExprAux . NE ExprAux
   66        | ExprAux . LT ExprAux
   67        | ExprAux . GT ExprAux
   68        | ExprAux . LE ExprAux
   69        | ExprAux . GE ExprAux

    STAR  shift, and go to state 108
    DIV   shift, and go to state 109
    MOD   shift, and go to state 110

    $default  reduce using rule 55 (ExprAux)


State 145

   54 ExprAux: ExprAux . PLUS ExprAux
   55        | ExprAux . MINUS ExprAux
   56        | ExprAux . STAR ExprAux
   56        | ExprAux STAR ExprAux .
   57        | ExprAux . DIV ExprAux
   58        | ExprAux . MOD ExprAux
   59        | ExprAux . OR ExprAux
   60        | ExprAux . XOR ExprAux
   61        | ExprAux . AND ExprAux
   62        | ExprAux . LSHIFT ExprAux
   63        | ExprAux . RSHIFT ExprAux
   64        | ExprAux . EQ ExprAux
   65        | ExprAux . NE ExprAux
   66        | ExprAux . LT ExprAux
   67        | ExprAux . GT ExprAux
   68        | ExprAux . LE ExprAux
   69        | ExprAux . GE ExprAux

    $default  reduce using rule 56 (ExprAux)


State 146

   54 ExprAux: ExprAux . PLUS ExprAux
   55        | ExprAux . MINUS ExprAux
   56        | ExprAux . STAR ExprAux
   57        | ExprAux . DIV ExprAux
   57        | ExprAux DIV ExprAux .
   58        | ExprAux . MOD ExprAux
   59        | ExprAux . OR ExprAux
   60        | ExprAux . XOR ExprAux
   61        | ExprAux . AND ExprAux
   62        | ExprAux . LSHIFT ExprAux
   63        | ExprAux . RSHIFT ExprAux
   64        | ExprAux . EQ ExprAux
   65        | ExprAux . NE ExprAux
   66        | ExprAux . LT ExprAux
   67        | ExprAux . GT ExprAux
   68        | ExprAux . LE ExprAux
   69        | ExprAux . GE ExprAux

    $default  reduce using rule 57 (ExprAux)


State 147

   54 ExprAux: ExprAux . PLUS ExprAux
   55        | ExprAux . MINUS ExprAux
   56        | ExprAux . STAR ExprAux
   57        | ExprAux . DIV ExprAux
   58        | ExprAux . MOD ExprAux
   58        | ExprAux MOD ExprAux .
   59        | ExprAux . OR ExprAux
   60        | ExprAux . XOR ExprAux
   61        | ExprAux . AND ExprAux
   62        | ExprAux . LSHIFT ExprAux
   63        | ExprAux . RSHIFT ExprAux
   64        | ExprAux . EQ ExprAux
   65        | ExprAux . NE ExprAux
   66        | ExprAux . LT ExprAux
   67        | ExprAux . GT ExprAux
   68        | ExprAux . LE ExprAux
   69        | ExprAux . GE ExprAux

    $default  reduce using rule 58 (ExprAux)


State 148

   54 ExprAux: ExprAux . PLUS ExprAux
   55        | ExprAux . MINUS ExprAux
   56        | ExprAux . STAR ExprAux
   57        | ExprAux . DIV ExprAux
   58        | ExprAux . MOD ExprAux
   59        | ExprAux . OR ExprAux
   60        | ExprAux . XOR ExprAux
   61        | ExprAux . AND ExprAux
   61        | ExprAux AND ExprAux .
   62        | ExprAux . LSHIFT ExprAux
   63        | ExprAux . RSHIFT ExprAux
   64        | ExprAux . EQ ExprAux
   65        | ExprAux . NE ExprAux
   66        | ExprAux . LT ExprAux
   67        | ExprAux . GT ExprAux
   68        | ExprAux . LE ExprAux
   69        | ExprAux . GE ExprAux

    PLUS    shift, and go to state 106
    MINUS   shift, and go to state 107
    STAR    shift, and go to state 108
    DIV     shift, and go to state 109
    MOD     shift, and go to state 110
    XOR     shift, and go to state 113
    LSHIFT  shift, and go to state 114
    RSHIFT  shift, and go to state 115
    EQ      shift, and go to state 116
    GE      shift, and go to state 117
    GT      shift, and go to state 118
    LE      shift, and go to state 119
    LT      shift, and go to state 120
    NE      shift, and go to state 121

    $default  reduce using rule 61 (ExprAux)


State 149

   54 ExprAux: ExprAux . PLUS ExprAux
   55        | ExprAux . MINUS ExprAux
   56        | ExprAux . STAR ExprAux
   57        | ExprAux . DIV ExprAux
   58        | ExprAux . MOD ExprAux
   59        | ExprAux . OR ExprAux
   59        | ExprAux OR ExprAux .
   60        | ExprAux . XOR ExprAux
   61        | ExprAux . AND ExprAux
   62        | ExprAux . LSHIFT ExprAux
   63        | ExprAux . RSHIFT ExprAux
   64        | ExprAux . EQ ExprAux
   65        | ExprAux . NE ExprAux
   66        | ExprAux . LT ExprAux
   67        | ExprAux . GT ExprAux
   68        | ExprAux . LE ExprAux
   69        | ExprAux . GE ExprAux

    PLUS    shift, and go to state 106
    MINUS   shift, and go to state 107
    STAR    shift, and go to state 108
    DIV     shift, and go to state 109
    MOD     shift, and go to state 110
    AND     shift, and go to state 111
    XOR     shift, and go to state 113
    LSHIFT  shift, and go to state 114
    RSHIFT  shift, and go to state 115
    EQ      shift, and go to state 116
    GE      shift, and go to state 117
    GT      shift, and go to state 118
    LE      shift, and go to state 119
    LT      shift, and go to state 120
    NE      shift, and go to state 121

    $default  reduce using rule 59 (ExprAux)


State 150

   54 ExprAux: ExprAux . PLUS ExprAux
   55        | ExprAux . MINUS ExprAux
   56        | ExprAux . STAR ExprAux
   57        | ExprAux . DIV ExprAux
   58        | ExprAux . MOD ExprAux
   59        | ExprAux . OR ExprAux
   60        | ExprAux . XOR ExprAux
   60        | ExprAux XOR ExprAux .
   61        | ExprAux . AND ExprAux
   62        | ExprAux . LSHIFT ExprAux
   63        | ExprAux . RSHIFT ExprAux
   64        | ExprAux . EQ ExprAux
   65        | ExprAux . NE ExprAux
   66        | ExprAux . LT ExprAux
   67        | ExprAux . GT ExprAux
   68        | ExprAux . LE ExprAux
   69        | ExprAux . GE ExprAux

    PLUS    shift, and go to state 106
    MINUS   shift, and go to state 107
    STAR    shift, and go to state 108
    DIV     shift, and go to state 109
    MOD     shift, and go to state 110
    LSHIFT  shift, and go to state 114
    RSHIFT  shift, and go to state 115
    EQ      shift, and go to state 116
    GE      shift, and go to state 117
    GT      shift, and go to state 118
    LE      shift, and go to state 119
    LT      shift, and go to state 120
    NE      shift, and go to state 121

    $default  reduce using rule 60 (ExprAux)


State 151

   54 ExprAux: ExprAux . PLUS ExprAux
   55        | ExprAux . MINUS ExprAux
   56        | ExprAux . STAR ExprAux
   57        | ExprAux . DIV ExprAux
   58        | ExprAux . MOD ExprAux
   59        | ExprAux . OR ExprAux
   60        | ExprAux . XOR ExprAux
   61        | ExprAux . AND ExprAux
   62        | ExprAux . LSHIFT ExprAux
   62        | ExprAux LSHIFT ExprAux .
   63        | ExprAux . RSHIFT ExprAux
   64        | ExprAux . EQ ExprAux
   65        | ExprAux . NE ExprAux
   66        | ExprAux . LT ExprAux
   67        | ExprAux . GT ExprAux
   68        | ExprAux . LE ExprAux
   69        | ExprAux . GE ExprAux

    PLUS   shift, and go to state 106
    MINUS  shift, and go to state 107
    STAR   shift, and go to state 108
    DIV    shift, and go to state 109
    MOD    shift, and go to state 110
    EQ     shift, and go to state 116
    GE     shift, and go to state 117
    GT     shift, and go to state 118
    LE     shift, and go to state 119
    LT     shift, and go to state 120
    NE     shift, and go to state 121

    $default  reduce using rule 62 (ExprAux)


State 152

   54 ExprAux: ExprAux . PLUS ExprAux
   55        | ExprAux . MINUS ExprAux
   56        | ExprAux . STAR ExprAux
   57        | ExprAux . DIV ExprAux
   58        | ExprAux . MOD ExprAux
   59        | ExprAux . OR ExprAux
   60        | ExprAux . XOR ExprAux
   61        | ExprAux . AND ExprAux
   62        | ExprAux . LSHIFT ExprAux
   63        | ExprAux . RSHIFT ExprAux
   63        | ExprAux RSHIFT ExprAux .
   64        | ExprAux . EQ ExprAux
   65        | ExprAux . NE ExprAux
   66        | ExprAux . LT ExprAux
   67        | ExprAux . GT ExprAux
   68        | ExprAux . LE ExprAux
   69        | ExprAux . GE ExprAux

    PLUS   shift, and go to state 106
    MINUS  shift, and go to state 107
    STAR   shift, and go to state 108
    DIV    shift, and go to state 109
    MOD    shift, and go to state 110
    EQ     shift, and go to state 116
    GE     shift, and go to state 117
    GT     shift, and go to state 118
    LE     shift, and go to state 119
    LT     shift, and go to state 120
    NE     shift, and go to state 121

    $default  reduce using rule 63 (ExprAux)


State 153

   54 ExprAux: ExprAux . PLUS ExprAux
   55        | ExprAux . MINUS ExprAux
   56        | ExprAux . STAR ExprAux
   57        | ExprAux . DIV ExprAux
   58        | ExprAux . MOD ExprAux
   59        | ExprAux . OR ExprAux
   60        | ExprAux . XOR ExprAux
   61        | ExprAux . AND ExprAux
   62        | ExprAux . LSHIFT ExprAux
   63        | ExprAux . RSHIFT ExprAux
   64        | ExprAux . EQ ExprAux
   64        | ExprAux EQ ExprAux .
   65        | ExprAux . NE ExprAux
   66        | ExprAux . LT ExprAux
   67        | ExprAux . GT ExprAux
   68        | ExprAux . LE ExprAux
   69        | ExprAux . GE ExprAux

    PLUS   shift, and go to state 106
    MINUS  shift, and go to state 107
    STAR   shift, and go to state 108
    DIV    shift, and go to state 109
    MOD    shift, and go to state 110
    GE     shift, and go to state 117
    GT     shift, and go to state 118
    LE     shift, and go to state 119
    LT     shift, and go to state 120

    $default  reduce using rule 64 (ExprAux)


State 154

   54 ExprAux: ExprAux . PLUS ExprAux
   55        | ExprAux . MINUS ExprAux
   56        | ExprAux . STAR ExprAux
   57        | ExprAux . DIV ExprAux
   58        | ExprAux . MOD ExprAux
   59        | ExprAux . OR ExprAux
   60        | ExprAux . XOR ExprAux
   61        | ExprAux . AND ExprAux
   62        | ExprAux . LSHIFT ExprAux
   63        | ExprAux . RSHIFT ExprAux
   64        | ExprAux . EQ ExprAux
   65        | ExprAux . NE ExprAux
   66        | ExprAux . LT ExprAux
   67        | ExprAux . GT ExprAux
   68        | ExprAux . LE ExprAux
   69        | ExprAux . GE ExprAux
   69        | ExprAux GE ExprAux .

    PLUS   shift, and go to state 106
    MINUS  shift, and go to state 107
    STAR   shift, and go to state 108
    DIV    shift, and go to state 109
    MOD    shift, and go to state 110

    $default  reduce using rule 69 (ExprAux)


State 155

   54 ExprAux: ExprAux . PLUS ExprAux
   55        | ExprAux . MINUS ExprAux
   56        | ExprAux . STAR ExprAux
   57        | ExprAux . DIV ExprAux
   58        | ExprAux . MOD ExprAux
   59        | ExprAux . OR ExprAux
   60        | ExprAux . XOR ExprAux
   61        | ExprAux . AND ExprAux
   62        | ExprAux . LSHIFT ExprAux
   63        | ExprAux . RSHIFT ExprAux
   64        | ExprAux . EQ ExprAux
   65        | ExprAux . NE ExprAux
   66        | ExprAux . LT ExprAux
   67        | ExprAux . GT ExprAux
   67        | ExprAux GT ExprAux .
   68        | ExprAux . LE ExprAux
   69        | ExprAux . GE ExprAux

    PLUS   shift, and go to state 106
    MINUS  shift, and go to state 107
    STAR   shift, and go to state 108
    DIV    shift, and go to state 109
    MOD    shift, and go to state 110

    $default  reduce using rule 67 (ExprAux)


State 156

   54 ExprAux: ExprAux . PLUS ExprAux
   55        | ExprAux . MINUS ExprAux
   56        | ExprAux . STAR ExprAux
   57        | ExprAux . DIV ExprAux
   58        | ExprAux . MOD ExprAux
   59        | ExprAux . OR ExprAux
   60        | ExprAux . XOR ExprAux
   61        | ExprAux . AND ExprAux
   62        | ExprAux . LSHIFT ExprAux
   63        | ExprAux . RSHIFT ExprAux
   64        | ExprAux . EQ ExprAux
   65        | ExprAux . NE ExprAux
   66        | ExprAux . LT ExprAux
   67        | ExprAux . GT ExprAux
   68        | ExprAux . LE ExprAux
   68        | ExprAux LE ExprAux .
   69        | ExprAux . GE ExprAux

    PLUS   shift, and go to state 106
    MINUS  shift, and go to state 107
    STAR   shift, and go to state 108
    DIV    shift, and go to state 109
    MOD    shift, and go to state 110

    $default  reduce using rule 68 (ExprAux)


State 157

   54 ExprAux: ExprAux . PLUS ExprAux
   55        | ExprAux . MINUS ExprAux
   56        | ExprAux . STAR ExprAux
   57        | ExprAux . DIV ExprAux
   58        | ExprAux . MOD ExprAux
   59        | ExprAux . OR ExprAux
   60        | ExprAux . XOR ExprAux
   61        | ExprAux . AND ExprAux
   62        | ExprAux . LSHIFT ExprAux
   63        | ExprAux . RSHIFT ExprAux
   64        | ExprAux . EQ ExprAux
   65        | ExprAux . NE ExprAux
   66        | ExprAux . LT ExprAux
   66        | ExprAux LT ExprAux .
   67        | ExprAux . GT ExprAux
   68        | ExprAux . LE ExprAux
   69        | ExprAux . GE ExprAux

    PLUS   shift, and go to state 106
    MINUS  shift, and go to state 107
    STAR   shift, and go to state 108
    DIV    shift, and go to state 109
    MOD    shift, and go to state 110

    $default  reduce using rule 66 (ExprAux)


State 158

   54 ExprAux: ExprAux . PLUS ExprAux
   55        | ExprAux . MINUS ExprAux
   56        | ExprAux . STAR ExprAux
   57        | ExprAux . DIV ExprAux
   58        | ExprAux . MOD ExprAux
   59        | ExprAux . OR ExprAux
   60        | ExprAux . XOR ExprAux
   61        | ExprAux . AND ExprAux
   62        | ExprAux . LSHIFT ExprAux
   63        | ExprAux . RSHIFT ExprAux
   64        | ExprAux . EQ ExprAux
   65        | ExprAux . NE ExprAux
   65        | ExprAux NE ExprAux .
   66        | ExprAux . LT ExprAux
   67        | ExprAux . GT ExprAux
   68        | ExprAux . LE ExprAux
   69        | ExprAux . GE ExprAux

    PLUS   shift, and go to state 106
    MINUS  shift, and go to state 107
    STAR   shift, and go to state 108
    DIV    shift, and go to state 109
    MOD    shift, and go to state 110
    GE     shift, and go to state 117
    GT     shift, and go to state 118
    LE     shift, and go to state 119
    LT     shift, and go to state 120

    $default  reduce using rule 65 (ExprAux)


State 159

   51 ParseArgs: PARSEINT LPAR error RPAR .

    $default  reduce using rule 51 (ParseArgs)


State 160

   50 ParseArgs: PARSEINT LPAR ID LSQ . Expr RSQ RPAR

    LPAR      shift, and go to state 61
    ID        shift, and go to state 63
    INTLIT    shift, and go to state 64
    REALLIT   shift, and go to state 65
    BOOLLIT   shift, and go to state 66
    PLUS      shift, and go to state 67
    MINUS     shift, and go to state 68
    NOT       shift, and go to state 69
    PARSEINT  shift, and go to state 40

    MethodInvocation  go to state 70
    ParseArgs         go to state 71
    Expr              go to state 170
    ExprAux           go to state 73


State 161

   26 VarDeclAux: COMMA ID . VarDeclAux

    COMMA  shift, and go to state 124

    $default  reduce using rule 27 (VarDeclAux)

    VarDeclAux  go to state 171


State 162

   25 VarDecl: Type ID VarDeclAux SEMICOLON .

    $default  reduce using rule 25 (VarDecl)


State 163

   17 FormalParams: STRING LSQ RSQ ID .

    $default  reduce using rule 17 (FormalParams)


State 164

   19 FormalParamsAux: COMMA Type . ID FormalParamsAux

    ID  shift, and go to state 172


State 165

   32 Statement: WHILE LPAR Expr RPAR Statement .

    $default  reduce using rule 32 (Statement)


State 166

   30 Statement: IF LPAR Expr RPAR Statement .
   31          | IF LPAR Expr RPAR Statement . ELSE Statement

    ELSE  shift, and go to state 173

    $default  reduce using rule 30 (Statement)


State 167

   49 MethodInvocationAux_2: COMMA Expr . MethodInvocationAux_2

    COMMA  shift, and go to state 135

    $default  reduce using rule 48 (MethodInvocationAux_2)

    MethodInvocationAux_2  go to state 174


State 168

   40 Statement: PRINT LPAR STRLIT RPAR SEMICOLON .

    $default  reduce using rule 40 (Statement)


State 169

   39 Statement: PRINT LPAR Expr RPAR SEMICOLON .

    $default  reduce using rule 39 (Statement)


State 170

   50 ParseArgs: PARSEINT LPAR ID LSQ Expr . RSQ RPAR

    RSQ  shift, and go to state 175


State 171

   26 VarDeclAux: COMMA ID VarDeclAux .

    $default  reduce using rule 26 (VarDeclAux)


State 172

   19 FormalParamsAux: COMMA Type ID . FormalParamsAux

    COMMA  shift, and go to state 127

    $default  reduce using rule 20 (FormalParamsAux)

    FormalParamsAux  go to state 176


State 173

   31 Statement: IF LPAR Expr RPAR Statement ELSE . Statement

    error      shift, and go to state 32
    LBRACE     shift, and go to state 33
    WHILE      shift, and go to state 34
    SEMICOLON  shift, and go to state 35
    IF         shift, and go to state 36
    ID         shift, and go to state 37
    PRINT      shift, and go to state 38
    RETURN     shift, and go to state 39
    PARSEINT   shift, and go to state 40

    Statement         go to state 177
    MethodInvocation  go to state 45
    ParseArgs         go to state 46


State 174

   49 MethodInvocationAux_2: COMMA Expr MethodInvocationAux_2 .

    $default  reduce using rule 49 (MethodInvocationAux_2)


State 175

   50 ParseArgs: PARSEINT LPAR ID LSQ Expr RSQ . RPAR

    RPAR  shift, and go to state 178


State 176

   19 FormalParamsAux: COMMA Type ID FormalParamsAux .

    $default  reduce using rule 19 (FormalParamsAux)


State 177

   31 Statement: IF LPAR Expr RPAR Statement ELSE Statement .

    $default  reduce using rule 31 (Statement)


State 178

   50 ParseArgs: PARSEINT LPAR ID LSQ Expr RSQ RPAR .

    $default  reduce using rule 50 (ParseArgs)
