Terminals unused in grammar

    ARROW
    RESERVED


Grammar

    0 $accept: Program $end

    1 Program: CLASS ID LBRACE ClassBody RBRACE

    2 ClassBody: MethodDecl ClassBody
    3          | MethodDecl
    4          | FieldDecl ClassBody
    5          | FieldDecl
    6          | SEMICOLON ClassBody
    7          | SEMICOLON

    8 MethodDecl: PUBLIC STATIC MethodHeader MethodBody

    9 FieldDecl: PUBLIC STATIC Type ID FieldDeclCommaAux SEMICOLON

   10 FieldDeclCommaAux: COMMA ID FieldDeclCommaAux
   11                  | COMMA ID

   12 Type: BOOL
   13     | INT
   14     | DOUBLE
   15     | STRING

   16 MethodHeader: Type ID LPAR FormalParams RPAR
   17             | Type ID LPAR RPAR
   18             | VOID ID LPAR FormalParams RPAR
   19             | VOID ID LPAR RPAR

   20 FormalParams: Type ID FormalParamsAux
   21             | STRING LSQ RSQ ID

   22 FormalParamsAux: COMMA Type ID FormalParamsAux
   23                | COMMA Type ID

   24 MethodBody: LBRACE MethodBodyAux RBRACE

   25 MethodBodyAux: Statement MethodBodyAux
   26              | Statement
   27              | VarDecl MethodBodyAux
   28              | VarDecl

   29 VarDecl: Type ID VarDeclAux SEMICOLON

   30 VarDeclAux: COMMA ID VarDeclAux
   31           | COMMA ID

   32 Statement: LBRACE RBRACE
   33          | LBRACE Statement RBRACE
   34          | IF LPAR Expr RPAR Statement
   35          | IF LPAR Expr RPAR Statement ELSE Statement
   36          | WHILE LPAR Expr RPAR Statement
   37          | RETURN Expr SEMICOLON
   38          | RETURN SEMICOLON
   39          | MethodInvocation SEMICOLON
   40          | Assignment SEMICOLON
   41          | ParseArgs SEMICOLON
   42          | SEMICOLON
   43          | PRINT LPAR Expr RPAR SEMICOLON
   44          | PRINT LPAR STRLIT RPAR SEMICOLON

   45 MethodInvocation: ID LPAR MethodInvocationAux RPAR
   46                 | ID LPAR RPAR

   47 MethodInvocationAux: Expr
   48                    | Expr MethodBodyAux2

   49 MethodBodyAux2: COMMA Expr MethodBodyAux2
   50               | COMMA Expr

   51 Assignment: ID ASSIGN Expr

   52 ParseArgs: PARSEINT LPAR ID LSQ Expr RSQ RPAR

   53 Expr: Expr PLUS Expr
   54     | Expr MINUS Expr
   55     | Expr STAR Expr
   56     | Expr DIV Expr
   57     | Expr MOD Expr
   58     | Expr OR Expr
   59     | Expr XOR Expr
   60     | Expr AND Expr
   61     | Expr LSHIFT Expr
   62     | Expr RSHIFT Expr
   63     | Expr EQ Expr
   64     | Expr NE Expr
   65     | Expr LT Expr
   66     | Expr GT Expr
   67     | Expr LE Expr
   68     | Expr GE Expr
   69     | MINUS Expr
   70     | NOT Expr
   71     | PLUS Expr
   72     | LPAR Expr RPAR
   73     | MethodInvocation
   74     | Assignment
   75     | ParseArgs
   76     | ID
   77     | ID DOTLENGTH
   78     | INTLIT
   79     | REALLIT
   80     | BOOLLIT


Terminals, with rules where they appear

    $end (0) 0
    error (256)
    CLASS (258) 1
    PUBLIC (259) 8 9
    STATIC (260) 8 9
    STRING (261) 15 21
    VOID (262) 18 19
    INT (263) 13
    DOUBLE (264) 14
    BOOL (265) 12
    SEMICOLON (266) 6 7 9 29 37 38 39 40 41 42 43 44
    COMMA (267) 10 11 22 23 30 31 49 50
    LBRACE (268) 1 24 32 33
    RBRACE (269) 1 24 32 33
    LPAR (270) 16 17 18 19 34 35 36 43 44 45 46 52 72
    RPAR (271) 16 17 18 19 34 35 36 43 44 45 46 52 72
    LSQ (272) 21 52
    RSQ (273) 21 52
    ASSIGN (274) 51
    PLUS (275) 53 71
    MINUS (276) 54 69
    STAR (277) 55
    DIV (278) 56
    MOD (279) 57
    XOR (280) 59
    OR (281) 58
    AND (282) 60
    BOOLLIT (283) 80
    EQ (284) 63
    NE (285) 64
    LE (286) 67
    GE (287) 68
    LT (288) 65
    GT (289) 66
    NOT (290) 70
    WHILE (291) 36
    IF (292) 34 35
    ELSE (293) 35
    RETURN (294) 37 38
    ARROW (295)
    LSHIFT (296) 61
    RSHIFT (297) 62
    DOTLENGTH (298) 77
    PRINT (299) 43 44
    PARSEINT (300) 52
    RESERVED (301)
    REALLIT <string> (302) 79
    STRLIT <string> (303) 44
    INTLIT <string> (304) 78
    ID <string> (305) 1 9 10 11 16 17 18 19 20 21 22 23 29 30 31 45 46 51 52 76 77


Nonterminals, with rules where they appear

    $accept (51)
        on left: 0
    Program <ast> (52)
        on left: 1
        on right: 0
    ClassBody <ast> (53)
        on left: 2 3 4 5 6 7
        on right: 1 2 4 6
    MethodDecl <ast> (54)
        on left: 8
        on right: 2 3
    FieldDecl <ast> (55)
        on left: 9
        on right: 4 5
    FieldDeclCommaAux <ast> (56)
        on left: 10 11
        on right: 9 10
    Type <ast> (57)
        on left: 12 13 14 15
        on right: 9 16 17 20 22 23 29
    MethodHeader <ast> (58)
        on left: 16 17 18 19
        on right: 8
    FormalParams <ast> (59)
        on left: 20 21
        on right: 16 18
    FormalParamsAux <ast> (60)
        on left: 22 23
        on right: 20 22
    MethodBody <ast> (61)
        on left: 24
        on right: 8
    MethodBodyAux <ast> (62)
        on left: 25 26 27 28
        on right: 24 25 27
    VarDecl <ast> (63)
        on left: 29
        on right: 27 28
    VarDeclAux <ast> (64)
        on left: 30 31
        on right: 29 30
    Statement <ast> (65)
        on left: 32 33 34 35 36 37 38 39 40 41 42 43 44
        on right: 25 26 33 34 35 36
    MethodInvocation <ast> (66)
        on left: 45 46
        on right: 39 73
    MethodInvocationAux <ast> (67)
        on left: 47 48
        on right: 45
    MethodBodyAux2 <ast> (68)
        on left: 49 50
        on right: 48 49
    Assignment <ast> (69)
        on left: 51
        on right: 40 74
    ParseArgs <ast> (70)
        on left: 52
        on right: 41 75
    Expr <ast> (71)
        on left: 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80
        on right: 34 35 36 37 43 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72


State 0

    0 $accept: . Program $end

    CLASS  shift, and go to state 1

    Program  go to state 2


State 1

    1 Program: CLASS . ID LBRACE ClassBody RBRACE

    ID  shift, and go to state 3


State 2

    0 $accept: Program . $end

    $end  shift, and go to state 4


State 3

    1 Program: CLASS ID . LBRACE ClassBody RBRACE

    LBRACE  shift, and go to state 5


State 4

    0 $accept: Program $end .

    $default  accept


State 5

    1 Program: CLASS ID LBRACE . ClassBody RBRACE

    PUBLIC     shift, and go to state 6
    SEMICOLON  shift, and go to state 7

    ClassBody   go to state 8
    MethodDecl  go to state 9
    FieldDecl   go to state 10


State 6

    8 MethodDecl: PUBLIC . STATIC MethodHeader MethodBody
    9 FieldDecl: PUBLIC . STATIC Type ID FieldDeclCommaAux SEMICOLON

    STATIC  shift, and go to state 11


State 7

    6 ClassBody: SEMICOLON . ClassBody
    7          | SEMICOLON .

    PUBLIC     shift, and go to state 6
    SEMICOLON  shift, and go to state 7

    $default  reduce using rule 7 (ClassBody)

    ClassBody   go to state 12
    MethodDecl  go to state 9
    FieldDecl   go to state 10


State 8

    1 Program: CLASS ID LBRACE ClassBody . RBRACE

    RBRACE  shift, and go to state 13


State 9

    2 ClassBody: MethodDecl . ClassBody
    3          | MethodDecl .

    PUBLIC     shift, and go to state 6
    SEMICOLON  shift, and go to state 7

    $default  reduce using rule 3 (ClassBody)

    ClassBody   go to state 14
    MethodDecl  go to state 9
    FieldDecl   go to state 10


State 10

    4 ClassBody: FieldDecl . ClassBody
    5          | FieldDecl .

    PUBLIC     shift, and go to state 6
    SEMICOLON  shift, and go to state 7

    $default  reduce using rule 5 (ClassBody)

    ClassBody   go to state 15
    MethodDecl  go to state 9
    FieldDecl   go to state 10


State 11

    8 MethodDecl: PUBLIC STATIC . MethodHeader MethodBody
    9 FieldDecl: PUBLIC STATIC . Type ID FieldDeclCommaAux SEMICOLON

    STRING  shift, and go to state 16
    VOID    shift, and go to state 17
    INT     shift, and go to state 18
    DOUBLE  shift, and go to state 19
    BOOL    shift, and go to state 20

    Type          go to state 21
    MethodHeader  go to state 22


State 12

    6 ClassBody: SEMICOLON ClassBody .

    $default  reduce using rule 6 (ClassBody)


State 13

    1 Program: CLASS ID LBRACE ClassBody RBRACE .

    $default  reduce using rule 1 (Program)


State 14

    2 ClassBody: MethodDecl ClassBody .

    $default  reduce using rule 2 (ClassBody)


State 15

    4 ClassBody: FieldDecl ClassBody .

    $default  reduce using rule 4 (ClassBody)


State 16

   15 Type: STRING .

    $default  reduce using rule 15 (Type)


State 17

   18 MethodHeader: VOID . ID LPAR FormalParams RPAR
   19             | VOID . ID LPAR RPAR

    ID  shift, and go to state 23


State 18

   13 Type: INT .

    $default  reduce using rule 13 (Type)


State 19

   14 Type: DOUBLE .

    $default  reduce using rule 14 (Type)


State 20

   12 Type: BOOL .

    $default  reduce using rule 12 (Type)


State 21

    9 FieldDecl: PUBLIC STATIC Type . ID FieldDeclCommaAux SEMICOLON
   16 MethodHeader: Type . ID LPAR FormalParams RPAR
   17             | Type . ID LPAR RPAR

    ID  shift, and go to state 24


State 22

    8 MethodDecl: PUBLIC STATIC MethodHeader . MethodBody

    LBRACE  shift, and go to state 25

    MethodBody  go to state 26


State 23

   18 MethodHeader: VOID ID . LPAR FormalParams RPAR
   19             | VOID ID . LPAR RPAR

    LPAR  shift, and go to state 27


State 24

    9 FieldDecl: PUBLIC STATIC Type ID . FieldDeclCommaAux SEMICOLON
   16 MethodHeader: Type ID . LPAR FormalParams RPAR
   17             | Type ID . LPAR RPAR

    COMMA  shift, and go to state 28
    LPAR   shift, and go to state 29

    FieldDeclCommaAux  go to state 30


State 25

   24 MethodBody: LBRACE . MethodBodyAux RBRACE

    STRING     shift, and go to state 16
    INT        shift, and go to state 18
    DOUBLE     shift, and go to state 19
    BOOL       shift, and go to state 20
    SEMICOLON  shift, and go to state 31
    LBRACE     shift, and go to state 32
    WHILE      shift, and go to state 33
    IF         shift, and go to state 34
    RETURN     shift, and go to state 35
    PRINT      shift, and go to state 36
    PARSEINT   shift, and go to state 37
    ID         shift, and go to state 38

    Type              go to state 39
    MethodBodyAux     go to state 40
    VarDecl           go to state 41
    Statement         go to state 42
    MethodInvocation  go to state 43
    Assignment        go to state 44
    ParseArgs         go to state 45


State 26

    8 MethodDecl: PUBLIC STATIC MethodHeader MethodBody .

    $default  reduce using rule 8 (MethodDecl)


State 27

   18 MethodHeader: VOID ID LPAR . FormalParams RPAR
   19             | VOID ID LPAR . RPAR

    STRING  shift, and go to state 46
    INT     shift, and go to state 18
    DOUBLE  shift, and go to state 19
    BOOL    shift, and go to state 20
    RPAR    shift, and go to state 47

    Type          go to state 48
    FormalParams  go to state 49


State 28

   10 FieldDeclCommaAux: COMMA . ID FieldDeclCommaAux
   11                  | COMMA . ID

    ID  shift, and go to state 50


State 29

   16 MethodHeader: Type ID LPAR . FormalParams RPAR
   17             | Type ID LPAR . RPAR

    STRING  shift, and go to state 46
    INT     shift, and go to state 18
    DOUBLE  shift, and go to state 19
    BOOL    shift, and go to state 20
    RPAR    shift, and go to state 51

    Type          go to state 48
    FormalParams  go to state 52


State 30

    9 FieldDecl: PUBLIC STATIC Type ID FieldDeclCommaAux . SEMICOLON

    SEMICOLON  shift, and go to state 53


State 31

   42 Statement: SEMICOLON .

    $default  reduce using rule 42 (Statement)


State 32

   32 Statement: LBRACE . RBRACE
   33          | LBRACE . Statement RBRACE

    SEMICOLON  shift, and go to state 31
    LBRACE     shift, and go to state 32
    RBRACE     shift, and go to state 54
    WHILE      shift, and go to state 33
    IF         shift, and go to state 34
    RETURN     shift, and go to state 35
    PRINT      shift, and go to state 36
    PARSEINT   shift, and go to state 37
    ID         shift, and go to state 38

    Statement         go to state 55
    MethodInvocation  go to state 43
    Assignment        go to state 44
    ParseArgs         go to state 45


State 33

   36 Statement: WHILE . LPAR Expr RPAR Statement

    LPAR  shift, and go to state 56


State 34

   34 Statement: IF . LPAR Expr RPAR Statement
   35          | IF . LPAR Expr RPAR Statement ELSE Statement

    LPAR  shift, and go to state 57


State 35

   37 Statement: RETURN . Expr SEMICOLON
   38          | RETURN . SEMICOLON

    SEMICOLON  shift, and go to state 58
    LPAR       shift, and go to state 59
    PLUS       shift, and go to state 60
    MINUS      shift, and go to state 61
    BOOLLIT    shift, and go to state 62
    NOT        shift, and go to state 63
    PARSEINT   shift, and go to state 37
    REALLIT    shift, and go to state 64
    INTLIT     shift, and go to state 65
    ID         shift, and go to state 66

    MethodInvocation  go to state 67
    Assignment        go to state 68
    ParseArgs         go to state 69
    Expr              go to state 70


State 36

   43 Statement: PRINT . LPAR Expr RPAR SEMICOLON
   44          | PRINT . LPAR STRLIT RPAR SEMICOLON

    LPAR  shift, and go to state 71


State 37

   52 ParseArgs: PARSEINT . LPAR ID LSQ Expr RSQ RPAR

    LPAR  shift, and go to state 72


State 38

   45 MethodInvocation: ID . LPAR MethodInvocationAux RPAR
   46                 | ID . LPAR RPAR
   51 Assignment: ID . ASSIGN Expr

    LPAR    shift, and go to state 73
    ASSIGN  shift, and go to state 74


State 39

   29 VarDecl: Type . ID VarDeclAux SEMICOLON

    ID  shift, and go to state 75


State 40

   24 MethodBody: LBRACE MethodBodyAux . RBRACE

    RBRACE  shift, and go to state 76


State 41

   27 MethodBodyAux: VarDecl . MethodBodyAux
   28              | VarDecl .

    STRING     shift, and go to state 16
    INT        shift, and go to state 18
    DOUBLE     shift, and go to state 19
    BOOL       shift, and go to state 20
    SEMICOLON  shift, and go to state 31
    LBRACE     shift, and go to state 32
    WHILE      shift, and go to state 33
    IF         shift, and go to state 34
    RETURN     shift, and go to state 35
    PRINT      shift, and go to state 36
    PARSEINT   shift, and go to state 37
    ID         shift, and go to state 38

    $default  reduce using rule 28 (MethodBodyAux)

    Type              go to state 39
    MethodBodyAux     go to state 77
    VarDecl           go to state 41
    Statement         go to state 42
    MethodInvocation  go to state 43
    Assignment        go to state 44
    ParseArgs         go to state 45


State 42

   25 MethodBodyAux: Statement . MethodBodyAux
   26              | Statement .

    STRING     shift, and go to state 16
    INT        shift, and go to state 18
    DOUBLE     shift, and go to state 19
    BOOL       shift, and go to state 20
    SEMICOLON  shift, and go to state 31
    LBRACE     shift, and go to state 32
    WHILE      shift, and go to state 33
    IF         shift, and go to state 34
    RETURN     shift, and go to state 35
    PRINT      shift, and go to state 36
    PARSEINT   shift, and go to state 37
    ID         shift, and go to state 38

    $default  reduce using rule 26 (MethodBodyAux)

    Type              go to state 39
    MethodBodyAux     go to state 78
    VarDecl           go to state 41
    Statement         go to state 42
    MethodInvocation  go to state 43
    Assignment        go to state 44
    ParseArgs         go to state 45


State 43

   39 Statement: MethodInvocation . SEMICOLON

    SEMICOLON  shift, and go to state 79


State 44

   40 Statement: Assignment . SEMICOLON

    SEMICOLON  shift, and go to state 80


State 45

   41 Statement: ParseArgs . SEMICOLON

    SEMICOLON  shift, and go to state 81


State 46

   15 Type: STRING .
   21 FormalParams: STRING . LSQ RSQ ID

    LSQ  shift, and go to state 82

    $default  reduce using rule 15 (Type)


State 47

   19 MethodHeader: VOID ID LPAR RPAR .

    $default  reduce using rule 19 (MethodHeader)


State 48

   20 FormalParams: Type . ID FormalParamsAux

    ID  shift, and go to state 83


State 49

   18 MethodHeader: VOID ID LPAR FormalParams . RPAR

    RPAR  shift, and go to state 84


State 50

   10 FieldDeclCommaAux: COMMA ID . FieldDeclCommaAux
   11                  | COMMA ID .

    COMMA  shift, and go to state 28

    $default  reduce using rule 11 (FieldDeclCommaAux)

    FieldDeclCommaAux  go to state 85


State 51

   17 MethodHeader: Type ID LPAR RPAR .

    $default  reduce using rule 17 (MethodHeader)


State 52

   16 MethodHeader: Type ID LPAR FormalParams . RPAR

    RPAR  shift, and go to state 86


State 53

    9 FieldDecl: PUBLIC STATIC Type ID FieldDeclCommaAux SEMICOLON .

    $default  reduce using rule 9 (FieldDecl)


State 54

   32 Statement: LBRACE RBRACE .

    $default  reduce using rule 32 (Statement)


State 55

   33 Statement: LBRACE Statement . RBRACE

    RBRACE  shift, and go to state 87


State 56

   36 Statement: WHILE LPAR . Expr RPAR Statement

    LPAR      shift, and go to state 59
    PLUS      shift, and go to state 60
    MINUS     shift, and go to state 61
    BOOLLIT   shift, and go to state 62
    NOT       shift, and go to state 63
    PARSEINT  shift, and go to state 37
    REALLIT   shift, and go to state 64
    INTLIT    shift, and go to state 65
    ID        shift, and go to state 66

    MethodInvocation  go to state 67
    Assignment        go to state 68
    ParseArgs         go to state 69
    Expr              go to state 88


State 57

   34 Statement: IF LPAR . Expr RPAR Statement
   35          | IF LPAR . Expr RPAR Statement ELSE Statement

    LPAR      shift, and go to state 59
    PLUS      shift, and go to state 60
    MINUS     shift, and go to state 61
    BOOLLIT   shift, and go to state 62
    NOT       shift, and go to state 63
    PARSEINT  shift, and go to state 37
    REALLIT   shift, and go to state 64
    INTLIT    shift, and go to state 65
    ID        shift, and go to state 66

    MethodInvocation  go to state 67
    Assignment        go to state 68
    ParseArgs         go to state 69
    Expr              go to state 89


State 58

   38 Statement: RETURN SEMICOLON .

    $default  reduce using rule 38 (Statement)


State 59

   72 Expr: LPAR . Expr RPAR

    LPAR      shift, and go to state 59
    PLUS      shift, and go to state 60
    MINUS     shift, and go to state 61
    BOOLLIT   shift, and go to state 62
    NOT       shift, and go to state 63
    PARSEINT  shift, and go to state 37
    REALLIT   shift, and go to state 64
    INTLIT    shift, and go to state 65
    ID        shift, and go to state 66

    MethodInvocation  go to state 67
    Assignment        go to state 68
    ParseArgs         go to state 69
    Expr              go to state 90


State 60

   71 Expr: PLUS . Expr

    LPAR      shift, and go to state 59
    PLUS      shift, and go to state 60
    MINUS     shift, and go to state 61
    BOOLLIT   shift, and go to state 62
    NOT       shift, and go to state 63
    PARSEINT  shift, and go to state 37
    REALLIT   shift, and go to state 64
    INTLIT    shift, and go to state 65
    ID        shift, and go to state 66

    MethodInvocation  go to state 67
    Assignment        go to state 68
    ParseArgs         go to state 69
    Expr              go to state 91


State 61

   69 Expr: MINUS . Expr

    LPAR      shift, and go to state 59
    PLUS      shift, and go to state 60
    MINUS     shift, and go to state 61
    BOOLLIT   shift, and go to state 62
    NOT       shift, and go to state 63
    PARSEINT  shift, and go to state 37
    REALLIT   shift, and go to state 64
    INTLIT    shift, and go to state 65
    ID        shift, and go to state 66

    MethodInvocation  go to state 67
    Assignment        go to state 68
    ParseArgs         go to state 69
    Expr              go to state 92


State 62

   80 Expr: BOOLLIT .

    $default  reduce using rule 80 (Expr)


State 63

   70 Expr: NOT . Expr

    LPAR      shift, and go to state 59
    PLUS      shift, and go to state 60
    MINUS     shift, and go to state 61
    BOOLLIT   shift, and go to state 62
    NOT       shift, and go to state 63
    PARSEINT  shift, and go to state 37
    REALLIT   shift, and go to state 64
    INTLIT    shift, and go to state 65
    ID        shift, and go to state 66

    MethodInvocation  go to state 67
    Assignment        go to state 68
    ParseArgs         go to state 69
    Expr              go to state 93


State 64

   79 Expr: REALLIT .

    $default  reduce using rule 79 (Expr)


State 65

   78 Expr: INTLIT .

    $default  reduce using rule 78 (Expr)


State 66

   45 MethodInvocation: ID . LPAR MethodInvocationAux RPAR
   46                 | ID . LPAR RPAR
   51 Assignment: ID . ASSIGN Expr
   76 Expr: ID .
   77     | ID . DOTLENGTH

    LPAR       shift, and go to state 73
    ASSIGN     shift, and go to state 74
    DOTLENGTH  shift, and go to state 94

    $default  reduce using rule 76 (Expr)


State 67

   73 Expr: MethodInvocation .

    $default  reduce using rule 73 (Expr)


State 68

   74 Expr: Assignment .

    $default  reduce using rule 74 (Expr)


State 69

   75 Expr: ParseArgs .

    $default  reduce using rule 75 (Expr)


State 70

   37 Statement: RETURN Expr . SEMICOLON
   53 Expr: Expr . PLUS Expr
   54     | Expr . MINUS Expr
   55     | Expr . STAR Expr
   56     | Expr . DIV Expr
   57     | Expr . MOD Expr
   58     | Expr . OR Expr
   59     | Expr . XOR Expr
   60     | Expr . AND Expr
   61     | Expr . LSHIFT Expr
   62     | Expr . RSHIFT Expr
   63     | Expr . EQ Expr
   64     | Expr . NE Expr
   65     | Expr . LT Expr
   66     | Expr . GT Expr
   67     | Expr . LE Expr
   68     | Expr . GE Expr

    SEMICOLON  shift, and go to state 95
    PLUS       shift, and go to state 96
    MINUS      shift, and go to state 97
    STAR       shift, and go to state 98
    DIV        shift, and go to state 99
    MOD        shift, and go to state 100
    XOR        shift, and go to state 101
    OR         shift, and go to state 102
    AND        shift, and go to state 103
    EQ         shift, and go to state 104
    NE         shift, and go to state 105
    LE         shift, and go to state 106
    GE         shift, and go to state 107
    LT         shift, and go to state 108
    GT         shift, and go to state 109
    LSHIFT     shift, and go to state 110
    RSHIFT     shift, and go to state 111


State 71

   43 Statement: PRINT LPAR . Expr RPAR SEMICOLON
   44          | PRINT LPAR . STRLIT RPAR SEMICOLON

    LPAR      shift, and go to state 59
    PLUS      shift, and go to state 60
    MINUS     shift, and go to state 61
    BOOLLIT   shift, and go to state 62
    NOT       shift, and go to state 63
    PARSEINT  shift, and go to state 37
    REALLIT   shift, and go to state 64
    STRLIT    shift, and go to state 112
    INTLIT    shift, and go to state 65
    ID        shift, and go to state 66

    MethodInvocation  go to state 67
    Assignment        go to state 68
    ParseArgs         go to state 69
    Expr              go to state 113


State 72

   52 ParseArgs: PARSEINT LPAR . ID LSQ Expr RSQ RPAR

    ID  shift, and go to state 114


State 73

   45 MethodInvocation: ID LPAR . MethodInvocationAux RPAR
   46                 | ID LPAR . RPAR

    LPAR      shift, and go to state 59
    RPAR      shift, and go to state 115
    PLUS      shift, and go to state 60
    MINUS     shift, and go to state 61
    BOOLLIT   shift, and go to state 62
    NOT       shift, and go to state 63
    PARSEINT  shift, and go to state 37
    REALLIT   shift, and go to state 64
    INTLIT    shift, and go to state 65
    ID        shift, and go to state 66

    MethodInvocation     go to state 67
    MethodInvocationAux  go to state 116
    Assignment           go to state 68
    ParseArgs            go to state 69
    Expr                 go to state 117


State 74

   51 Assignment: ID ASSIGN . Expr

    LPAR      shift, and go to state 59
    PLUS      shift, and go to state 60
    MINUS     shift, and go to state 61
    BOOLLIT   shift, and go to state 62
    NOT       shift, and go to state 63
    PARSEINT  shift, and go to state 37
    REALLIT   shift, and go to state 64
    INTLIT    shift, and go to state 65
    ID        shift, and go to state 66

    MethodInvocation  go to state 67
    Assignment        go to state 68
    ParseArgs         go to state 69
    Expr              go to state 118


State 75

   29 VarDecl: Type ID . VarDeclAux SEMICOLON

    COMMA  shift, and go to state 119

    VarDeclAux  go to state 120


State 76

   24 MethodBody: LBRACE MethodBodyAux RBRACE .

    $default  reduce using rule 24 (MethodBody)


State 77

   27 MethodBodyAux: VarDecl MethodBodyAux .

    $default  reduce using rule 27 (MethodBodyAux)


State 78

   25 MethodBodyAux: Statement MethodBodyAux .

    $default  reduce using rule 25 (MethodBodyAux)


State 79

   39 Statement: MethodInvocation SEMICOLON .

    $default  reduce using rule 39 (Statement)


State 80

   40 Statement: Assignment SEMICOLON .

    $default  reduce using rule 40 (Statement)


State 81

   41 Statement: ParseArgs SEMICOLON .

    $default  reduce using rule 41 (Statement)


State 82

   21 FormalParams: STRING LSQ . RSQ ID

    RSQ  shift, and go to state 121


State 83

   20 FormalParams: Type ID . FormalParamsAux

    COMMA  shift, and go to state 122

    FormalParamsAux  go to state 123


State 84

   18 MethodHeader: VOID ID LPAR FormalParams RPAR .

    $default  reduce using rule 18 (MethodHeader)


State 85

   10 FieldDeclCommaAux: COMMA ID FieldDeclCommaAux .

    $default  reduce using rule 10 (FieldDeclCommaAux)


State 86

   16 MethodHeader: Type ID LPAR FormalParams RPAR .

    $default  reduce using rule 16 (MethodHeader)


State 87

   33 Statement: LBRACE Statement RBRACE .

    $default  reduce using rule 33 (Statement)


State 88

   36 Statement: WHILE LPAR Expr . RPAR Statement
   53 Expr: Expr . PLUS Expr
   54     | Expr . MINUS Expr
   55     | Expr . STAR Expr
   56     | Expr . DIV Expr
   57     | Expr . MOD Expr
   58     | Expr . OR Expr
   59     | Expr . XOR Expr
   60     | Expr . AND Expr
   61     | Expr . LSHIFT Expr
   62     | Expr . RSHIFT Expr
   63     | Expr . EQ Expr
   64     | Expr . NE Expr
   65     | Expr . LT Expr
   66     | Expr . GT Expr
   67     | Expr . LE Expr
   68     | Expr . GE Expr

    RPAR    shift, and go to state 124
    PLUS    shift, and go to state 96
    MINUS   shift, and go to state 97
    STAR    shift, and go to state 98
    DIV     shift, and go to state 99
    MOD     shift, and go to state 100
    XOR     shift, and go to state 101
    OR      shift, and go to state 102
    AND     shift, and go to state 103
    EQ      shift, and go to state 104
    NE      shift, and go to state 105
    LE      shift, and go to state 106
    GE      shift, and go to state 107
    LT      shift, and go to state 108
    GT      shift, and go to state 109
    LSHIFT  shift, and go to state 110
    RSHIFT  shift, and go to state 111


State 89

   34 Statement: IF LPAR Expr . RPAR Statement
   35          | IF LPAR Expr . RPAR Statement ELSE Statement
   53 Expr: Expr . PLUS Expr
   54     | Expr . MINUS Expr
   55     | Expr . STAR Expr
   56     | Expr . DIV Expr
   57     | Expr . MOD Expr
   58     | Expr . OR Expr
   59     | Expr . XOR Expr
   60     | Expr . AND Expr
   61     | Expr . LSHIFT Expr
   62     | Expr . RSHIFT Expr
   63     | Expr . EQ Expr
   64     | Expr . NE Expr
   65     | Expr . LT Expr
   66     | Expr . GT Expr
   67     | Expr . LE Expr
   68     | Expr . GE Expr

    RPAR    shift, and go to state 125
    PLUS    shift, and go to state 96
    MINUS   shift, and go to state 97
    STAR    shift, and go to state 98
    DIV     shift, and go to state 99
    MOD     shift, and go to state 100
    XOR     shift, and go to state 101
    OR      shift, and go to state 102
    AND     shift, and go to state 103
    EQ      shift, and go to state 104
    NE      shift, and go to state 105
    LE      shift, and go to state 106
    GE      shift, and go to state 107
    LT      shift, and go to state 108
    GT      shift, and go to state 109
    LSHIFT  shift, and go to state 110
    RSHIFT  shift, and go to state 111


State 90

   53 Expr: Expr . PLUS Expr
   54     | Expr . MINUS Expr
   55     | Expr . STAR Expr
   56     | Expr . DIV Expr
   57     | Expr . MOD Expr
   58     | Expr . OR Expr
   59     | Expr . XOR Expr
   60     | Expr . AND Expr
   61     | Expr . LSHIFT Expr
   62     | Expr . RSHIFT Expr
   63     | Expr . EQ Expr
   64     | Expr . NE Expr
   65     | Expr . LT Expr
   66     | Expr . GT Expr
   67     | Expr . LE Expr
   68     | Expr . GE Expr
   72     | LPAR Expr . RPAR

    RPAR    shift, and go to state 126
    PLUS    shift, and go to state 96
    MINUS   shift, and go to state 97
    STAR    shift, and go to state 98
    DIV     shift, and go to state 99
    MOD     shift, and go to state 100
    XOR     shift, and go to state 101
    OR      shift, and go to state 102
    AND     shift, and go to state 103
    EQ      shift, and go to state 104
    NE      shift, and go to state 105
    LE      shift, and go to state 106
    GE      shift, and go to state 107
    LT      shift, and go to state 108
    GT      shift, and go to state 109
    LSHIFT  shift, and go to state 110
    RSHIFT  shift, and go to state 111


State 91

   53 Expr: Expr . PLUS Expr
   54     | Expr . MINUS Expr
   55     | Expr . STAR Expr
   56     | Expr . DIV Expr
   57     | Expr . MOD Expr
   58     | Expr . OR Expr
   59     | Expr . XOR Expr
   60     | Expr . AND Expr
   61     | Expr . LSHIFT Expr
   62     | Expr . RSHIFT Expr
   63     | Expr . EQ Expr
   64     | Expr . NE Expr
   65     | Expr . LT Expr
   66     | Expr . GT Expr
   67     | Expr . LE Expr
   68     | Expr . GE Expr
   71     | PLUS Expr .

    STAR  shift, and go to state 98
    DIV   shift, and go to state 99
    MOD   shift, and go to state 100

    $default  reduce using rule 71 (Expr)


State 92

   53 Expr: Expr . PLUS Expr
   54     | Expr . MINUS Expr
   55     | Expr . STAR Expr
   56     | Expr . DIV Expr
   57     | Expr . MOD Expr
   58     | Expr . OR Expr
   59     | Expr . XOR Expr
   60     | Expr . AND Expr
   61     | Expr . LSHIFT Expr
   62     | Expr . RSHIFT Expr
   63     | Expr . EQ Expr
   64     | Expr . NE Expr
   65     | Expr . LT Expr
   66     | Expr . GT Expr
   67     | Expr . LE Expr
   68     | Expr . GE Expr
   69     | MINUS Expr .

    STAR  shift, and go to state 98
    DIV   shift, and go to state 99
    MOD   shift, and go to state 100

    $default  reduce using rule 69 (Expr)


State 93

   53 Expr: Expr . PLUS Expr
   54     | Expr . MINUS Expr
   55     | Expr . STAR Expr
   56     | Expr . DIV Expr
   57     | Expr . MOD Expr
   58     | Expr . OR Expr
   59     | Expr . XOR Expr
   60     | Expr . AND Expr
   61     | Expr . LSHIFT Expr
   62     | Expr . RSHIFT Expr
   63     | Expr . EQ Expr
   64     | Expr . NE Expr
   65     | Expr . LT Expr
   66     | Expr . GT Expr
   67     | Expr . LE Expr
   68     | Expr . GE Expr
   70     | NOT Expr .

    $default  reduce using rule 70 (Expr)


State 94

   77 Expr: ID DOTLENGTH .

    $default  reduce using rule 77 (Expr)


State 95

   37 Statement: RETURN Expr SEMICOLON .

    $default  reduce using rule 37 (Statement)


State 96

   53 Expr: Expr PLUS . Expr

    LPAR      shift, and go to state 59
    PLUS      shift, and go to state 60
    MINUS     shift, and go to state 61
    BOOLLIT   shift, and go to state 62
    NOT       shift, and go to state 63
    PARSEINT  shift, and go to state 37
    REALLIT   shift, and go to state 64
    INTLIT    shift, and go to state 65
    ID        shift, and go to state 66

    MethodInvocation  go to state 67
    Assignment        go to state 68
    ParseArgs         go to state 69
    Expr              go to state 127


State 97

   54 Expr: Expr MINUS . Expr

    LPAR      shift, and go to state 59
    PLUS      shift, and go to state 60
    MINUS     shift, and go to state 61
    BOOLLIT   shift, and go to state 62
    NOT       shift, and go to state 63
    PARSEINT  shift, and go to state 37
    REALLIT   shift, and go to state 64
    INTLIT    shift, and go to state 65
    ID        shift, and go to state 66

    MethodInvocation  go to state 67
    Assignment        go to state 68
    ParseArgs         go to state 69
    Expr              go to state 128


State 98

   55 Expr: Expr STAR . Expr

    LPAR      shift, and go to state 59
    PLUS      shift, and go to state 60
    MINUS     shift, and go to state 61
    BOOLLIT   shift, and go to state 62
    NOT       shift, and go to state 63
    PARSEINT  shift, and go to state 37
    REALLIT   shift, and go to state 64
    INTLIT    shift, and go to state 65
    ID        shift, and go to state 66

    MethodInvocation  go to state 67
    Assignment        go to state 68
    ParseArgs         go to state 69
    Expr              go to state 129


State 99

   56 Expr: Expr DIV . Expr

    LPAR      shift, and go to state 59
    PLUS      shift, and go to state 60
    MINUS     shift, and go to state 61
    BOOLLIT   shift, and go to state 62
    NOT       shift, and go to state 63
    PARSEINT  shift, and go to state 37
    REALLIT   shift, and go to state 64
    INTLIT    shift, and go to state 65
    ID        shift, and go to state 66

    MethodInvocation  go to state 67
    Assignment        go to state 68
    ParseArgs         go to state 69
    Expr              go to state 130


State 100

   57 Expr: Expr MOD . Expr

    LPAR      shift, and go to state 59
    PLUS      shift, and go to state 60
    MINUS     shift, and go to state 61
    BOOLLIT   shift, and go to state 62
    NOT       shift, and go to state 63
    PARSEINT  shift, and go to state 37
    REALLIT   shift, and go to state 64
    INTLIT    shift, and go to state 65
    ID        shift, and go to state 66

    MethodInvocation  go to state 67
    Assignment        go to state 68
    ParseArgs         go to state 69
    Expr              go to state 131


State 101

   59 Expr: Expr XOR . Expr

    LPAR      shift, and go to state 59
    PLUS      shift, and go to state 60
    MINUS     shift, and go to state 61
    BOOLLIT   shift, and go to state 62
    NOT       shift, and go to state 63
    PARSEINT  shift, and go to state 37
    REALLIT   shift, and go to state 64
    INTLIT    shift, and go to state 65
    ID        shift, and go to state 66

    MethodInvocation  go to state 67
    Assignment        go to state 68
    ParseArgs         go to state 69
    Expr              go to state 132


State 102

   58 Expr: Expr OR . Expr

    LPAR      shift, and go to state 59
    PLUS      shift, and go to state 60
    MINUS     shift, and go to state 61
    BOOLLIT   shift, and go to state 62
    NOT       shift, and go to state 63
    PARSEINT  shift, and go to state 37
    REALLIT   shift, and go to state 64
    INTLIT    shift, and go to state 65
    ID        shift, and go to state 66

    MethodInvocation  go to state 67
    Assignment        go to state 68
    ParseArgs         go to state 69
    Expr              go to state 133


State 103

   60 Expr: Expr AND . Expr

    LPAR      shift, and go to state 59
    PLUS      shift, and go to state 60
    MINUS     shift, and go to state 61
    BOOLLIT   shift, and go to state 62
    NOT       shift, and go to state 63
    PARSEINT  shift, and go to state 37
    REALLIT   shift, and go to state 64
    INTLIT    shift, and go to state 65
    ID        shift, and go to state 66

    MethodInvocation  go to state 67
    Assignment        go to state 68
    ParseArgs         go to state 69
    Expr              go to state 134


State 104

   63 Expr: Expr EQ . Expr

    LPAR      shift, and go to state 59
    PLUS      shift, and go to state 60
    MINUS     shift, and go to state 61
    BOOLLIT   shift, and go to state 62
    NOT       shift, and go to state 63
    PARSEINT  shift, and go to state 37
    REALLIT   shift, and go to state 64
    INTLIT    shift, and go to state 65
    ID        shift, and go to state 66

    MethodInvocation  go to state 67
    Assignment        go to state 68
    ParseArgs         go to state 69
    Expr              go to state 135


State 105

   64 Expr: Expr NE . Expr

    LPAR      shift, and go to state 59
    PLUS      shift, and go to state 60
    MINUS     shift, and go to state 61
    BOOLLIT   shift, and go to state 62
    NOT       shift, and go to state 63
    PARSEINT  shift, and go to state 37
    REALLIT   shift, and go to state 64
    INTLIT    shift, and go to state 65
    ID        shift, and go to state 66

    MethodInvocation  go to state 67
    Assignment        go to state 68
    ParseArgs         go to state 69
    Expr              go to state 136


State 106

   67 Expr: Expr LE . Expr

    LPAR      shift, and go to state 59
    PLUS      shift, and go to state 60
    MINUS     shift, and go to state 61
    BOOLLIT   shift, and go to state 62
    NOT       shift, and go to state 63
    PARSEINT  shift, and go to state 37
    REALLIT   shift, and go to state 64
    INTLIT    shift, and go to state 65
    ID        shift, and go to state 66

    MethodInvocation  go to state 67
    Assignment        go to state 68
    ParseArgs         go to state 69
    Expr              go to state 137


State 107

   68 Expr: Expr GE . Expr

    LPAR      shift, and go to state 59
    PLUS      shift, and go to state 60
    MINUS     shift, and go to state 61
    BOOLLIT   shift, and go to state 62
    NOT       shift, and go to state 63
    PARSEINT  shift, and go to state 37
    REALLIT   shift, and go to state 64
    INTLIT    shift, and go to state 65
    ID        shift, and go to state 66

    MethodInvocation  go to state 67
    Assignment        go to state 68
    ParseArgs         go to state 69
    Expr              go to state 138


State 108

   65 Expr: Expr LT . Expr

    LPAR      shift, and go to state 59
    PLUS      shift, and go to state 60
    MINUS     shift, and go to state 61
    BOOLLIT   shift, and go to state 62
    NOT       shift, and go to state 63
    PARSEINT  shift, and go to state 37
    REALLIT   shift, and go to state 64
    INTLIT    shift, and go to state 65
    ID        shift, and go to state 66

    MethodInvocation  go to state 67
    Assignment        go to state 68
    ParseArgs         go to state 69
    Expr              go to state 139


State 109

   66 Expr: Expr GT . Expr

    LPAR      shift, and go to state 59
    PLUS      shift, and go to state 60
    MINUS     shift, and go to state 61
    BOOLLIT   shift, and go to state 62
    NOT       shift, and go to state 63
    PARSEINT  shift, and go to state 37
    REALLIT   shift, and go to state 64
    INTLIT    shift, and go to state 65
    ID        shift, and go to state 66

    MethodInvocation  go to state 67
    Assignment        go to state 68
    ParseArgs         go to state 69
    Expr              go to state 140


State 110

   61 Expr: Expr LSHIFT . Expr

    LPAR      shift, and go to state 59
    PLUS      shift, and go to state 60
    MINUS     shift, and go to state 61
    BOOLLIT   shift, and go to state 62
    NOT       shift, and go to state 63
    PARSEINT  shift, and go to state 37
    REALLIT   shift, and go to state 64
    INTLIT    shift, and go to state 65
    ID        shift, and go to state 66

    MethodInvocation  go to state 67
    Assignment        go to state 68
    ParseArgs         go to state 69
    Expr              go to state 141


State 111

   62 Expr: Expr RSHIFT . Expr

    LPAR      shift, and go to state 59
    PLUS      shift, and go to state 60
    MINUS     shift, and go to state 61
    BOOLLIT   shift, and go to state 62
    NOT       shift, and go to state 63
    PARSEINT  shift, and go to state 37
    REALLIT   shift, and go to state 64
    INTLIT    shift, and go to state 65
    ID        shift, and go to state 66

    MethodInvocation  go to state 67
    Assignment        go to state 68
    ParseArgs         go to state 69
    Expr              go to state 142


State 112

   44 Statement: PRINT LPAR STRLIT . RPAR SEMICOLON

    RPAR  shift, and go to state 143


State 113

   43 Statement: PRINT LPAR Expr . RPAR SEMICOLON
   53 Expr: Expr . PLUS Expr
   54     | Expr . MINUS Expr
   55     | Expr . STAR Expr
   56     | Expr . DIV Expr
   57     | Expr . MOD Expr
   58     | Expr . OR Expr
   59     | Expr . XOR Expr
   60     | Expr . AND Expr
   61     | Expr . LSHIFT Expr
   62     | Expr . RSHIFT Expr
   63     | Expr . EQ Expr
   64     | Expr . NE Expr
   65     | Expr . LT Expr
   66     | Expr . GT Expr
   67     | Expr . LE Expr
   68     | Expr . GE Expr

    RPAR    shift, and go to state 144
    PLUS    shift, and go to state 96
    MINUS   shift, and go to state 97
    STAR    shift, and go to state 98
    DIV     shift, and go to state 99
    MOD     shift, and go to state 100
    XOR     shift, and go to state 101
    OR      shift, and go to state 102
    AND     shift, and go to state 103
    EQ      shift, and go to state 104
    NE      shift, and go to state 105
    LE      shift, and go to state 106
    GE      shift, and go to state 107
    LT      shift, and go to state 108
    GT      shift, and go to state 109
    LSHIFT  shift, and go to state 110
    RSHIFT  shift, and go to state 111


State 114

   52 ParseArgs: PARSEINT LPAR ID . LSQ Expr RSQ RPAR

    LSQ  shift, and go to state 145


State 115

   46 MethodInvocation: ID LPAR RPAR .

    $default  reduce using rule 46 (MethodInvocation)


State 116

   45 MethodInvocation: ID LPAR MethodInvocationAux . RPAR

    RPAR  shift, and go to state 146


State 117

   47 MethodInvocationAux: Expr .
   48                    | Expr . MethodBodyAux2
   53 Expr: Expr . PLUS Expr
   54     | Expr . MINUS Expr
   55     | Expr . STAR Expr
   56     | Expr . DIV Expr
   57     | Expr . MOD Expr
   58     | Expr . OR Expr
   59     | Expr . XOR Expr
   60     | Expr . AND Expr
   61     | Expr . LSHIFT Expr
   62     | Expr . RSHIFT Expr
   63     | Expr . EQ Expr
   64     | Expr . NE Expr
   65     | Expr . LT Expr
   66     | Expr . GT Expr
   67     | Expr . LE Expr
   68     | Expr . GE Expr

    COMMA   shift, and go to state 147
    PLUS    shift, and go to state 96
    MINUS   shift, and go to state 97
    STAR    shift, and go to state 98
    DIV     shift, and go to state 99
    MOD     shift, and go to state 100
    XOR     shift, and go to state 101
    OR      shift, and go to state 102
    AND     shift, and go to state 103
    EQ      shift, and go to state 104
    NE      shift, and go to state 105
    LE      shift, and go to state 106
    GE      shift, and go to state 107
    LT      shift, and go to state 108
    GT      shift, and go to state 109
    LSHIFT  shift, and go to state 110
    RSHIFT  shift, and go to state 111

    $default  reduce using rule 47 (MethodInvocationAux)

    MethodBodyAux2  go to state 148


State 118

   51 Assignment: ID ASSIGN Expr .
   53 Expr: Expr . PLUS Expr
   54     | Expr . MINUS Expr
   55     | Expr . STAR Expr
   56     | Expr . DIV Expr
   57     | Expr . MOD Expr
   58     | Expr . OR Expr
   59     | Expr . XOR Expr
   60     | Expr . AND Expr
   61     | Expr . LSHIFT Expr
   62     | Expr . RSHIFT Expr
   63     | Expr . EQ Expr
   64     | Expr . NE Expr
   65     | Expr . LT Expr
   66     | Expr . GT Expr
   67     | Expr . LE Expr
   68     | Expr . GE Expr

    PLUS    shift, and go to state 96
    MINUS   shift, and go to state 97
    STAR    shift, and go to state 98
    DIV     shift, and go to state 99
    MOD     shift, and go to state 100
    XOR     shift, and go to state 101
    OR      shift, and go to state 102
    AND     shift, and go to state 103
    EQ      shift, and go to state 104
    NE      shift, and go to state 105
    LE      shift, and go to state 106
    GE      shift, and go to state 107
    LT      shift, and go to state 108
    GT      shift, and go to state 109
    LSHIFT  shift, and go to state 110
    RSHIFT  shift, and go to state 111

    $default  reduce using rule 51 (Assignment)


State 119

   30 VarDeclAux: COMMA . ID VarDeclAux
   31           | COMMA . ID

    ID  shift, and go to state 149


State 120

   29 VarDecl: Type ID VarDeclAux . SEMICOLON

    SEMICOLON  shift, and go to state 150


State 121

   21 FormalParams: STRING LSQ RSQ . ID

    ID  shift, and go to state 151


State 122

   22 FormalParamsAux: COMMA . Type ID FormalParamsAux
   23                | COMMA . Type ID

    STRING  shift, and go to state 16
    INT     shift, and go to state 18
    DOUBLE  shift, and go to state 19
    BOOL    shift, and go to state 20

    Type  go to state 152


State 123

   20 FormalParams: Type ID FormalParamsAux .

    $default  reduce using rule 20 (FormalParams)


State 124

   36 Statement: WHILE LPAR Expr RPAR . Statement

    SEMICOLON  shift, and go to state 31
    LBRACE     shift, and go to state 32
    WHILE      shift, and go to state 33
    IF         shift, and go to state 34
    RETURN     shift, and go to state 35
    PRINT      shift, and go to state 36
    PARSEINT   shift, and go to state 37
    ID         shift, and go to state 38

    Statement         go to state 153
    MethodInvocation  go to state 43
    Assignment        go to state 44
    ParseArgs         go to state 45


State 125

   34 Statement: IF LPAR Expr RPAR . Statement
   35          | IF LPAR Expr RPAR . Statement ELSE Statement

    SEMICOLON  shift, and go to state 31
    LBRACE     shift, and go to state 32
    WHILE      shift, and go to state 33
    IF         shift, and go to state 34
    RETURN     shift, and go to state 35
    PRINT      shift, and go to state 36
    PARSEINT   shift, and go to state 37
    ID         shift, and go to state 38

    Statement         go to state 154
    MethodInvocation  go to state 43
    Assignment        go to state 44
    ParseArgs         go to state 45


State 126

   72 Expr: LPAR Expr RPAR .

    $default  reduce using rule 72 (Expr)


State 127

   53 Expr: Expr . PLUS Expr
   53     | Expr PLUS Expr .
   54     | Expr . MINUS Expr
   55     | Expr . STAR Expr
   56     | Expr . DIV Expr
   57     | Expr . MOD Expr
   58     | Expr . OR Expr
   59     | Expr . XOR Expr
   60     | Expr . AND Expr
   61     | Expr . LSHIFT Expr
   62     | Expr . RSHIFT Expr
   63     | Expr . EQ Expr
   64     | Expr . NE Expr
   65     | Expr . LT Expr
   66     | Expr . GT Expr
   67     | Expr . LE Expr
   68     | Expr . GE Expr

    STAR  shift, and go to state 98
    DIV   shift, and go to state 99
    MOD   shift, and go to state 100

    $default  reduce using rule 53 (Expr)


State 128

   53 Expr: Expr . PLUS Expr
   54     | Expr . MINUS Expr
   54     | Expr MINUS Expr .
   55     | Expr . STAR Expr
   56     | Expr . DIV Expr
   57     | Expr . MOD Expr
   58     | Expr . OR Expr
   59     | Expr . XOR Expr
   60     | Expr . AND Expr
   61     | Expr . LSHIFT Expr
   62     | Expr . RSHIFT Expr
   63     | Expr . EQ Expr
   64     | Expr . NE Expr
   65     | Expr . LT Expr
   66     | Expr . GT Expr
   67     | Expr . LE Expr
   68     | Expr . GE Expr

    STAR  shift, and go to state 98
    DIV   shift, and go to state 99
    MOD   shift, and go to state 100

    $default  reduce using rule 54 (Expr)


State 129

   53 Expr: Expr . PLUS Expr
   54     | Expr . MINUS Expr
   55     | Expr . STAR Expr
   55     | Expr STAR Expr .
   56     | Expr . DIV Expr
   57     | Expr . MOD Expr
   58     | Expr . OR Expr
   59     | Expr . XOR Expr
   60     | Expr . AND Expr
   61     | Expr . LSHIFT Expr
   62     | Expr . RSHIFT Expr
   63     | Expr . EQ Expr
   64     | Expr . NE Expr
   65     | Expr . LT Expr
   66     | Expr . GT Expr
   67     | Expr . LE Expr
   68     | Expr . GE Expr

    $default  reduce using rule 55 (Expr)


State 130

   53 Expr: Expr . PLUS Expr
   54     | Expr . MINUS Expr
   55     | Expr . STAR Expr
   56     | Expr . DIV Expr
   56     | Expr DIV Expr .
   57     | Expr . MOD Expr
   58     | Expr . OR Expr
   59     | Expr . XOR Expr
   60     | Expr . AND Expr
   61     | Expr . LSHIFT Expr
   62     | Expr . RSHIFT Expr
   63     | Expr . EQ Expr
   64     | Expr . NE Expr
   65     | Expr . LT Expr
   66     | Expr . GT Expr
   67     | Expr . LE Expr
   68     | Expr . GE Expr

    $default  reduce using rule 56 (Expr)


State 131

   53 Expr: Expr . PLUS Expr
   54     | Expr . MINUS Expr
   55     | Expr . STAR Expr
   56     | Expr . DIV Expr
   57     | Expr . MOD Expr
   57     | Expr MOD Expr .
   58     | Expr . OR Expr
   59     | Expr . XOR Expr
   60     | Expr . AND Expr
   61     | Expr . LSHIFT Expr
   62     | Expr . RSHIFT Expr
   63     | Expr . EQ Expr
   64     | Expr . NE Expr
   65     | Expr . LT Expr
   66     | Expr . GT Expr
   67     | Expr . LE Expr
   68     | Expr . GE Expr

    $default  reduce using rule 57 (Expr)


State 132

   53 Expr: Expr . PLUS Expr
   54     | Expr . MINUS Expr
   55     | Expr . STAR Expr
   56     | Expr . DIV Expr
   57     | Expr . MOD Expr
   58     | Expr . OR Expr
   59     | Expr . XOR Expr
   59     | Expr XOR Expr .
   60     | Expr . AND Expr
   61     | Expr . LSHIFT Expr
   62     | Expr . RSHIFT Expr
   63     | Expr . EQ Expr
   64     | Expr . NE Expr
   65     | Expr . LT Expr
   66     | Expr . GT Expr
   67     | Expr . LE Expr
   68     | Expr . GE Expr

    PLUS    shift, and go to state 96
    MINUS   shift, and go to state 97
    STAR    shift, and go to state 98
    DIV     shift, and go to state 99
    MOD     shift, and go to state 100
    EQ      shift, and go to state 104
    NE      shift, and go to state 105
    LE      shift, and go to state 106
    GE      shift, and go to state 107
    LT      shift, and go to state 108
    GT      shift, and go to state 109
    LSHIFT  shift, and go to state 110
    RSHIFT  shift, and go to state 111

    $default  reduce using rule 59 (Expr)


State 133

   53 Expr: Expr . PLUS Expr
   54     | Expr . MINUS Expr
   55     | Expr . STAR Expr
   56     | Expr . DIV Expr
   57     | Expr . MOD Expr
   58     | Expr . OR Expr
   58     | Expr OR Expr .
   59     | Expr . XOR Expr
   60     | Expr . AND Expr
   61     | Expr . LSHIFT Expr
   62     | Expr . RSHIFT Expr
   63     | Expr . EQ Expr
   64     | Expr . NE Expr
   65     | Expr . LT Expr
   66     | Expr . GT Expr
   67     | Expr . LE Expr
   68     | Expr . GE Expr

    PLUS    shift, and go to state 96
    MINUS   shift, and go to state 97
    STAR    shift, and go to state 98
    DIV     shift, and go to state 99
    MOD     shift, and go to state 100
    XOR     shift, and go to state 101
    AND     shift, and go to state 103
    EQ      shift, and go to state 104
    NE      shift, and go to state 105
    LE      shift, and go to state 106
    GE      shift, and go to state 107
    LT      shift, and go to state 108
    GT      shift, and go to state 109
    LSHIFT  shift, and go to state 110
    RSHIFT  shift, and go to state 111

    $default  reduce using rule 58 (Expr)


State 134

   53 Expr: Expr . PLUS Expr
   54     | Expr . MINUS Expr
   55     | Expr . STAR Expr
   56     | Expr . DIV Expr
   57     | Expr . MOD Expr
   58     | Expr . OR Expr
   59     | Expr . XOR Expr
   60     | Expr . AND Expr
   60     | Expr AND Expr .
   61     | Expr . LSHIFT Expr
   62     | Expr . RSHIFT Expr
   63     | Expr . EQ Expr
   64     | Expr . NE Expr
   65     | Expr . LT Expr
   66     | Expr . GT Expr
   67     | Expr . LE Expr
   68     | Expr . GE Expr

    PLUS    shift, and go to state 96
    MINUS   shift, and go to state 97
    STAR    shift, and go to state 98
    DIV     shift, and go to state 99
    MOD     shift, and go to state 100
    XOR     shift, and go to state 101
    EQ      shift, and go to state 104
    NE      shift, and go to state 105
    LE      shift, and go to state 106
    GE      shift, and go to state 107
    LT      shift, and go to state 108
    GT      shift, and go to state 109
    LSHIFT  shift, and go to state 110
    RSHIFT  shift, and go to state 111

    $default  reduce using rule 60 (Expr)


State 135

   53 Expr: Expr . PLUS Expr
   54     | Expr . MINUS Expr
   55     | Expr . STAR Expr
   56     | Expr . DIV Expr
   57     | Expr . MOD Expr
   58     | Expr . OR Expr
   59     | Expr . XOR Expr
   60     | Expr . AND Expr
   61     | Expr . LSHIFT Expr
   62     | Expr . RSHIFT Expr
   63     | Expr . EQ Expr
   63     | Expr EQ Expr .
   64     | Expr . NE Expr
   65     | Expr . LT Expr
   66     | Expr . GT Expr
   67     | Expr . LE Expr
   68     | Expr . GE Expr

    PLUS   shift, and go to state 96
    MINUS  shift, and go to state 97
    STAR   shift, and go to state 98
    DIV    shift, and go to state 99
    MOD    shift, and go to state 100
    LE     shift, and go to state 106
    GE     shift, and go to state 107
    LT     shift, and go to state 108
    GT     shift, and go to state 109

    $default  reduce using rule 63 (Expr)


State 136

   53 Expr: Expr . PLUS Expr
   54     | Expr . MINUS Expr
   55     | Expr . STAR Expr
   56     | Expr . DIV Expr
   57     | Expr . MOD Expr
   58     | Expr . OR Expr
   59     | Expr . XOR Expr
   60     | Expr . AND Expr
   61     | Expr . LSHIFT Expr
   62     | Expr . RSHIFT Expr
   63     | Expr . EQ Expr
   64     | Expr . NE Expr
   64     | Expr NE Expr .
   65     | Expr . LT Expr
   66     | Expr . GT Expr
   67     | Expr . LE Expr
   68     | Expr . GE Expr

    PLUS   shift, and go to state 96
    MINUS  shift, and go to state 97
    STAR   shift, and go to state 98
    DIV    shift, and go to state 99
    MOD    shift, and go to state 100
    LE     shift, and go to state 106
    GE     shift, and go to state 107
    LT     shift, and go to state 108
    GT     shift, and go to state 109

    $default  reduce using rule 64 (Expr)


State 137

   53 Expr: Expr . PLUS Expr
   54     | Expr . MINUS Expr
   55     | Expr . STAR Expr
   56     | Expr . DIV Expr
   57     | Expr . MOD Expr
   58     | Expr . OR Expr
   59     | Expr . XOR Expr
   60     | Expr . AND Expr
   61     | Expr . LSHIFT Expr
   62     | Expr . RSHIFT Expr
   63     | Expr . EQ Expr
   64     | Expr . NE Expr
   65     | Expr . LT Expr
   66     | Expr . GT Expr
   67     | Expr . LE Expr
   67     | Expr LE Expr .
   68     | Expr . GE Expr

    PLUS   shift, and go to state 96
    MINUS  shift, and go to state 97
    STAR   shift, and go to state 98
    DIV    shift, and go to state 99
    MOD    shift, and go to state 100

    $default  reduce using rule 67 (Expr)


State 138

   53 Expr: Expr . PLUS Expr
   54     | Expr . MINUS Expr
   55     | Expr . STAR Expr
   56     | Expr . DIV Expr
   57     | Expr . MOD Expr
   58     | Expr . OR Expr
   59     | Expr . XOR Expr
   60     | Expr . AND Expr
   61     | Expr . LSHIFT Expr
   62     | Expr . RSHIFT Expr
   63     | Expr . EQ Expr
   64     | Expr . NE Expr
   65     | Expr . LT Expr
   66     | Expr . GT Expr
   67     | Expr . LE Expr
   68     | Expr . GE Expr
   68     | Expr GE Expr .

    PLUS   shift, and go to state 96
    MINUS  shift, and go to state 97
    STAR   shift, and go to state 98
    DIV    shift, and go to state 99
    MOD    shift, and go to state 100

    $default  reduce using rule 68 (Expr)


State 139

   53 Expr: Expr . PLUS Expr
   54     | Expr . MINUS Expr
   55     | Expr . STAR Expr
   56     | Expr . DIV Expr
   57     | Expr . MOD Expr
   58     | Expr . OR Expr
   59     | Expr . XOR Expr
   60     | Expr . AND Expr
   61     | Expr . LSHIFT Expr
   62     | Expr . RSHIFT Expr
   63     | Expr . EQ Expr
   64     | Expr . NE Expr
   65     | Expr . LT Expr
   65     | Expr LT Expr .
   66     | Expr . GT Expr
   67     | Expr . LE Expr
   68     | Expr . GE Expr

    PLUS   shift, and go to state 96
    MINUS  shift, and go to state 97
    STAR   shift, and go to state 98
    DIV    shift, and go to state 99
    MOD    shift, and go to state 100

    $default  reduce using rule 65 (Expr)


State 140

   53 Expr: Expr . PLUS Expr
   54     | Expr . MINUS Expr
   55     | Expr . STAR Expr
   56     | Expr . DIV Expr
   57     | Expr . MOD Expr
   58     | Expr . OR Expr
   59     | Expr . XOR Expr
   60     | Expr . AND Expr
   61     | Expr . LSHIFT Expr
   62     | Expr . RSHIFT Expr
   63     | Expr . EQ Expr
   64     | Expr . NE Expr
   65     | Expr . LT Expr
   66     | Expr . GT Expr
   66     | Expr GT Expr .
   67     | Expr . LE Expr
   68     | Expr . GE Expr

    PLUS   shift, and go to state 96
    MINUS  shift, and go to state 97
    STAR   shift, and go to state 98
    DIV    shift, and go to state 99
    MOD    shift, and go to state 100

    $default  reduce using rule 66 (Expr)


State 141

   53 Expr: Expr . PLUS Expr
   54     | Expr . MINUS Expr
   55     | Expr . STAR Expr
   56     | Expr . DIV Expr
   57     | Expr . MOD Expr
   58     | Expr . OR Expr
   59     | Expr . XOR Expr
   60     | Expr . AND Expr
   61     | Expr . LSHIFT Expr
   61     | Expr LSHIFT Expr .
   62     | Expr . RSHIFT Expr
   63     | Expr . EQ Expr
   64     | Expr . NE Expr
   65     | Expr . LT Expr
   66     | Expr . GT Expr
   67     | Expr . LE Expr
   68     | Expr . GE Expr

    PLUS   shift, and go to state 96
    MINUS  shift, and go to state 97
    STAR   shift, and go to state 98
    DIV    shift, and go to state 99
    MOD    shift, and go to state 100
    EQ     shift, and go to state 104
    NE     shift, and go to state 105
    LE     shift, and go to state 106
    GE     shift, and go to state 107
    LT     shift, and go to state 108
    GT     shift, and go to state 109

    $default  reduce using rule 61 (Expr)


State 142

   53 Expr: Expr . PLUS Expr
   54     | Expr . MINUS Expr
   55     | Expr . STAR Expr
   56     | Expr . DIV Expr
   57     | Expr . MOD Expr
   58     | Expr . OR Expr
   59     | Expr . XOR Expr
   60     | Expr . AND Expr
   61     | Expr . LSHIFT Expr
   62     | Expr . RSHIFT Expr
   62     | Expr RSHIFT Expr .
   63     | Expr . EQ Expr
   64     | Expr . NE Expr
   65     | Expr . LT Expr
   66     | Expr . GT Expr
   67     | Expr . LE Expr
   68     | Expr . GE Expr

    PLUS   shift, and go to state 96
    MINUS  shift, and go to state 97
    STAR   shift, and go to state 98
    DIV    shift, and go to state 99
    MOD    shift, and go to state 100
    EQ     shift, and go to state 104
    NE     shift, and go to state 105
    LE     shift, and go to state 106
    GE     shift, and go to state 107
    LT     shift, and go to state 108
    GT     shift, and go to state 109

    $default  reduce using rule 62 (Expr)


State 143

   44 Statement: PRINT LPAR STRLIT RPAR . SEMICOLON

    SEMICOLON  shift, and go to state 155


State 144

   43 Statement: PRINT LPAR Expr RPAR . SEMICOLON

    SEMICOLON  shift, and go to state 156


State 145

   52 ParseArgs: PARSEINT LPAR ID LSQ . Expr RSQ RPAR

    LPAR      shift, and go to state 59
    PLUS      shift, and go to state 60
    MINUS     shift, and go to state 61
    BOOLLIT   shift, and go to state 62
    NOT       shift, and go to state 63
    PARSEINT  shift, and go to state 37
    REALLIT   shift, and go to state 64
    INTLIT    shift, and go to state 65
    ID        shift, and go to state 66

    MethodInvocation  go to state 67
    Assignment        go to state 68
    ParseArgs         go to state 69
    Expr              go to state 157


State 146

   45 MethodInvocation: ID LPAR MethodInvocationAux RPAR .

    $default  reduce using rule 45 (MethodInvocation)


State 147

   49 MethodBodyAux2: COMMA . Expr MethodBodyAux2
   50               | COMMA . Expr

    LPAR      shift, and go to state 59
    PLUS      shift, and go to state 60
    MINUS     shift, and go to state 61
    BOOLLIT   shift, and go to state 62
    NOT       shift, and go to state 63
    PARSEINT  shift, and go to state 37
    REALLIT   shift, and go to state 64
    INTLIT    shift, and go to state 65
    ID        shift, and go to state 66

    MethodInvocation  go to state 67
    Assignment        go to state 68
    ParseArgs         go to state 69
    Expr              go to state 158


State 148

   48 MethodInvocationAux: Expr MethodBodyAux2 .

    $default  reduce using rule 48 (MethodInvocationAux)


State 149

   30 VarDeclAux: COMMA ID . VarDeclAux
   31           | COMMA ID .

    COMMA  shift, and go to state 119

    $default  reduce using rule 31 (VarDeclAux)

    VarDeclAux  go to state 159


State 150

   29 VarDecl: Type ID VarDeclAux SEMICOLON .

    $default  reduce using rule 29 (VarDecl)


State 151

   21 FormalParams: STRING LSQ RSQ ID .

    $default  reduce using rule 21 (FormalParams)


State 152

   22 FormalParamsAux: COMMA Type . ID FormalParamsAux
   23                | COMMA Type . ID

    ID  shift, and go to state 160


State 153

   36 Statement: WHILE LPAR Expr RPAR Statement .

    $default  reduce using rule 36 (Statement)


State 154

   34 Statement: IF LPAR Expr RPAR Statement .
   35          | IF LPAR Expr RPAR Statement . ELSE Statement

    ELSE  shift, and go to state 161

    $default  reduce using rule 34 (Statement)


State 155

   44 Statement: PRINT LPAR STRLIT RPAR SEMICOLON .

    $default  reduce using rule 44 (Statement)


State 156

   43 Statement: PRINT LPAR Expr RPAR SEMICOLON .

    $default  reduce using rule 43 (Statement)


State 157

   52 ParseArgs: PARSEINT LPAR ID LSQ Expr . RSQ RPAR
   53 Expr: Expr . PLUS Expr
   54     | Expr . MINUS Expr
   55     | Expr . STAR Expr
   56     | Expr . DIV Expr
   57     | Expr . MOD Expr
   58     | Expr . OR Expr
   59     | Expr . XOR Expr
   60     | Expr . AND Expr
   61     | Expr . LSHIFT Expr
   62     | Expr . RSHIFT Expr
   63     | Expr . EQ Expr
   64     | Expr . NE Expr
   65     | Expr . LT Expr
   66     | Expr . GT Expr
   67     | Expr . LE Expr
   68     | Expr . GE Expr

    RSQ     shift, and go to state 162
    PLUS    shift, and go to state 96
    MINUS   shift, and go to state 97
    STAR    shift, and go to state 98
    DIV     shift, and go to state 99
    MOD     shift, and go to state 100
    XOR     shift, and go to state 101
    OR      shift, and go to state 102
    AND     shift, and go to state 103
    EQ      shift, and go to state 104
    NE      shift, and go to state 105
    LE      shift, and go to state 106
    GE      shift, and go to state 107
    LT      shift, and go to state 108
    GT      shift, and go to state 109
    LSHIFT  shift, and go to state 110
    RSHIFT  shift, and go to state 111


State 158

   49 MethodBodyAux2: COMMA Expr . MethodBodyAux2
   50               | COMMA Expr .
   53 Expr: Expr . PLUS Expr
   54     | Expr . MINUS Expr
   55     | Expr . STAR Expr
   56     | Expr . DIV Expr
   57     | Expr . MOD Expr
   58     | Expr . OR Expr
   59     | Expr . XOR Expr
   60     | Expr . AND Expr
   61     | Expr . LSHIFT Expr
   62     | Expr . RSHIFT Expr
   63     | Expr . EQ Expr
   64     | Expr . NE Expr
   65     | Expr . LT Expr
   66     | Expr . GT Expr
   67     | Expr . LE Expr
   68     | Expr . GE Expr

    COMMA   shift, and go to state 147
    PLUS    shift, and go to state 96
    MINUS   shift, and go to state 97
    STAR    shift, and go to state 98
    DIV     shift, and go to state 99
    MOD     shift, and go to state 100
    XOR     shift, and go to state 101
    OR      shift, and go to state 102
    AND     shift, and go to state 103
    EQ      shift, and go to state 104
    NE      shift, and go to state 105
    LE      shift, and go to state 106
    GE      shift, and go to state 107
    LT      shift, and go to state 108
    GT      shift, and go to state 109
    LSHIFT  shift, and go to state 110
    RSHIFT  shift, and go to state 111

    $default  reduce using rule 50 (MethodBodyAux2)

    MethodBodyAux2  go to state 163


State 159

   30 VarDeclAux: COMMA ID VarDeclAux .

    $default  reduce using rule 30 (VarDeclAux)


State 160

   22 FormalParamsAux: COMMA Type ID . FormalParamsAux
   23                | COMMA Type ID .

    COMMA  shift, and go to state 122

    $default  reduce using rule 23 (FormalParamsAux)

    FormalParamsAux  go to state 164


State 161

   35 Statement: IF LPAR Expr RPAR Statement ELSE . Statement

    SEMICOLON  shift, and go to state 31
    LBRACE     shift, and go to state 32
    WHILE      shift, and go to state 33
    IF         shift, and go to state 34
    RETURN     shift, and go to state 35
    PRINT      shift, and go to state 36
    PARSEINT   shift, and go to state 37
    ID         shift, and go to state 38

    Statement         go to state 165
    MethodInvocation  go to state 43
    Assignment        go to state 44
    ParseArgs         go to state 45


State 162

   52 ParseArgs: PARSEINT LPAR ID LSQ Expr RSQ . RPAR

    RPAR  shift, and go to state 166


State 163

   49 MethodBodyAux2: COMMA Expr MethodBodyAux2 .

    $default  reduce using rule 49 (MethodBodyAux2)


State 164

   22 FormalParamsAux: COMMA Type ID FormalParamsAux .

    $default  reduce using rule 22 (FormalParamsAux)


State 165

   35 Statement: IF LPAR Expr RPAR Statement ELSE Statement .

    $default  reduce using rule 35 (Statement)


State 166

   52 ParseArgs: PARSEINT LPAR ID LSQ Expr RSQ RPAR .

    $default  reduce using rule 52 (ParseArgs)
